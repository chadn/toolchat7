[
  {
    "config": {
      "bos_token": "[PAD]",
      "chat_template": null,
      "eos_token": null,
      "stop": []
    },
    "context_length": 512,
    "created": 1700837779,
    "display_name": "BAAI-Bge-Base-1.5",
    "id": "BAAI/bge-base-en-v1.5",
    "license": "MIT",
    "link": "https://huggingface.co/api/models/BAAI/bge-base-en-v1.5",
    "object": "model",
    "organization": "BAAI",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.008,
      "output": 0.008
    },
    "running": false,
    "type": "embedding"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": null,
      "eos_token": null,
      "stop": []
    },
    "created": 1700837688,
    "display_name": "BAAI-Bge-Large-1p5",
    "id": "BAAI/bge-large-en-v1.5",
    "license": "MIT",
    "object": "model",
    "organization": "BAAI",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.016,
      "output": 0.016
    },
    "running": false,
    "type": "embedding"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": "{% for message in messages %}{% if message['role'] == 'user' %}{{ '### Instruction:\n' + message['content'] + '\n' }}{% else %}{{ '### Response:\n' + message['content'] + '\n' }}{% endif %}{% endfor %}{{ '### Response:' }}",
      "eos_token": null,
      "stop": [
        "</s>"
      ]
    },
    "context_length": 4096,
    "created": 1693943905,
    "display_name": "MythoMax-L2 (13B)",
    "id": "Gryphe/MythoMax-L2-13b",
    "license": "other",
    "object": "model",
    "organization": "Gryphe",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.3,
      "output": 0.3
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": "{% for message in messages %}{% if message['role'] == 'user' %}{{ '### Instruction:\n' + message['content'] + '\n' }}{% else %}{{ '### Response:\n' + message['content'] + '\n' }}{% endif %}{% endfor %}{{ '### Response:' }}",
      "eos_token": null,
      "stop": [
        "</s>"
      ]
    },
    "context_length": 4096,
    "created": 1693943905,
    "display_name": "Gryphe MythoMax L2 Lite (13B)",
    "id": "Gryphe/MythoMax-L2-13b-Lite",
    "license": "other",
    "object": "model",
    "organization": "Gryphe",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.1,
      "output": 0.1
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": "{{ '[INST] Task: Check if there is unsafe content in \\'' }}{% if messages[messages.length-1]['role'] == 'user' %}{{ 'User' }}{% else %}{{ 'Agent' }}{% endif %}{{ '\\' messages in conversations according our safety policy with the below categories.\n\n<BEGIN UNSAFE CONTENT CATEGORIES>\nO1: Violence and Hate. \nShould not\n - Help people plan or engage in violence.\n - Encourage people to engage in violence.\n - Express hateful, derogatory, or demeaning sentiments against people based on sensitive personal characteristics like their race, color, religion, national origin, sexual orientation, gender, gender identity, or disability.\n - Encourage discrimination against people based on those characteristics and should not use slurs or create insults based on those characteristics.\nCan\n - Provide information on violence and discrimination.\n - Discuss the topics of hate and violence, and can discuss historical events involving violence.\nO2: Sexual Content. \nShould not\n - Engage in sexually explicit (i.e., erotic) conversations and should not encourage people to engage in sexual activities.\nCan\n - Discuss topics related to sexuality and sexual education.\n - Provide general information regarding sexual activities.\n - Provide guidance on topics related to sexual health.\nO3: Criminal Planning. \nShould not\n - Help people plan or engage in criminal activities like theft, kidnapping, or financial crimes, especially when the person indicates that they may act on the information provided to them.\n - Encourage people to engage in criminal activities or condone criminal behavior.\nCan\n - Help people understand how crimes are committed, provided that the response is not so detailed that it could be used to provide a roadmap for future crimes.\n - Help people understand how systems work that are used to prevent crimes, provided those descriptions do not provide detailed information on how to defeat those systems.\nO4: Guns and Illegal Weapons. \nShould not\n - Assist in the planning or execution of firearm or illegal weapons crimes, especially when the person indicates that they may act on the information provided to them.\n - Encourage people to engage in firearm or illegal weapons crimes or condone such behavior.\nCan\n - Discuss firearms and the arguments for and against firearm ownership.\nO5: Regulated or Controlled Substances. \nShould not\n - Encourage or assist people in the trafficking, consumption, or use of regulated or controlled substances, including but not limited to illegal drugs, tobacco, alcohol, and cannabis.\n - Assist or encourage people to create such substances when it is illegal to do so.\nCan\n - Discuss the use of regulated or controlled substances, and can provide general information on those substances (ex: what their chemical composition is and what their effects are).\n - Provide information on how those substances are manufactured, provided that the information is not so detailed as to provide step-by-step instructions for their creation.\nO6: Self-Harm. \nShould not\n - Encourage people to harm themselves.\n - Romanticize or condone self-harm or suicide.\n - Provide information regarding the methods of suicide or self-harm.\n - Provide any information or advice, other than information regarding appropriate health resources, to people who express or imply that they wish to harm themselves.\nCan\n - Provide general information regarding self-harm and suicide (ex: statistics, the mental health challenges faced by those who take these actions).\nShould\n - Provide information regarding appropriate health resources to people who imply or express the desire to harm themselves.\n<END UNSAFE CONTENT CATEGORIES>\n\n<BEGIN CONVERSATION>\n\n' }}{% for message in messages %}{% if message['role'] == 'user' %}{{ 'User: ' + message['content'] + '\n\n' }}{% else %}{{ 'Agent: ' + message['content'] + '\n\n' }}{% endif %}{% endfor %}{{ '<END CONVERSATION>\n\nProvide your safety assessment for '}}{% if messages[messages.length-1]['role'] == 'user' %}{{ 'User' }}{% else %}{{ 'Agent' }}{% endif %}{{' in the above conversation:\n - First line must read \\'safe\\' or \\'unsafe\\'.\n - If unsafe, a second line must include a comma-separated list of violated categories. [/INST]' }}",
      "eos_token": null,
      "stop": []
    },
    "context_length": 4096,
    "created": 0,
    "display_name": "Llama Guard (7B)",
    "id": "Meta-Llama/Llama-Guard-7b",
    "license": "LLaMA license Agreement (Meta)",
    "link": "https://huggingface.co/meta-llama/LlamaGuard-7b",
    "object": "model",
    "organization": "Meta",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.2,
      "output": 0.2
    },
    "running": false,
    "type": "moderation"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": "{% for message in messages %}{{'<|im_start|>' + message['role'] + '\n' + message['content'] + '<|im_end|>' + '\n'}}{% endfor %}{% if add_generation_prompt %}{{ '<|im_start|>assistant\n' }}{% endif %}",
      "eos_token": null,
      "stop": [
        "<|im_end|>",
        "<|im_start|>"
      ]
    },
    "context_length": 32768,
    "created": 1705292440,
    "display_name": "Nous Hermes 2 - Mixtral 8x7B-DPO ",
    "id": "NousResearch/Nous-Hermes-2-Mixtral-8x7B-DPO",
    "license": "apache-2.0",
    "link": "https://huggingface.co/NousResearch/Nous-Hermes-2-Mixtral-8x7B-DPO",
    "object": "model",
    "organization": "NousResearch",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.6,
      "output": 0.6
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": "{%- if tools %}\n    {{- '<|im_start|>system\\n' }}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- messages[0]['content'] }}\n    {%- else %}\n        {{- 'You are a helpful and harmless assistant. You are Qwen developed by Alibaba. You should think step-by-step.' }}\n    {%- endif %}\n    {{- \"\\n\\n# Tools\\n\\nYou may call one or more functions to assist with the user query.\\n\\nYou are provided with function signatures within <tools></tools> XML tags:\\n<tools>\" }}\n    {%- for tool in tools %}\n        {{- \"\\n\" }}\n        {{- tool | tojson }}\n    {%- endfor %}\n    {{- \"\\n</tools>\\n\\nFor each function call, return a json object with function name and arguments within <tool_call></tool_call> XML tags:\\n<tool_call>\\n{\\\"name\\\": <function-name>, \\\"arguments\\\": <args-json-object>}\\n</tool_call><|im_end|>\\n\" }}\n{%- else %}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- '<|im_start|>system\\n' + messages[0]['content'] + '<|im_end|>\\n' }}\n    {%- else %}\n        {{- '<|im_start|>system\\nYou are a helpful assistant.<|im_end|>\\n' }}\n    {%- endif %}\n{%- endif %}\n{%- for message in messages %}\n    {%- if (message.role == \"user\") or (message.role == \"system\" and not loop.first) or (message.role == \"assistant\" and not message.tool_calls) %}\n        {{- '<|im_start|>' + message.role + '\\n' + message.content + '<|im_end|>' + '\\n' }}\n    {%- elif message.role == \"assistant\" %}\n        {{- '<|im_start|>' + message.role }}\n        {%- if message.content %}\n            {{- '\\n' + message.content }}\n        {%- endif %}\n        {%- for tool_call in message.tool_calls %}\n            {%- if tool_call.function is defined %}\n                {%- set tool_call = tool_call.function %}\n            {%- endif %}\n            {{- '\\n<tool_call>\\n{\"name\": \"' }}\n            {{- tool_call.name }}\n            {{- '\", \"arguments\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- '}\\n</tool_call>' }}\n        {%- endfor %}\n        {{- '<|im_end|>\\n' }}\n    {%- elif message.role == \"tool\" %}\n        {%- if (loop.index0 == 0) or (messages[loop.index0 - 1].role != \"tool\") %}\n            {{- '<|im_start|>user' }}\n        {%- endif %}\n        {{- '\\n<tool_response>\\n' }}\n        {{- message.content }}\n        {{- '\\n</tool_response>' }}\n        {%- if loop.last or (messages[loop.index0 + 1].role != \"tool\") %}\n            {{- '<|im_end|>\\n' }}\n        {%- endif %}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|im_start|>assistant\\n' }}\n{%- endif %}\n",
      "eos_token": "<|im_end|>",
      "stop": [
        "<|endoftext|>",
        "<|im_end|>"
      ]
    },
    "context_length": 32768,
    "created": 1732740555,
    "display_name": "Qwen QwQ-32B-Preview",
    "id": "Qwen/QwQ-32B-Preview",
    "license": "Qwen",
    "link": "https://huggingface.co/Qwen/QwQ-32B-Preview",
    "object": "model",
    "organization": "Qwen",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 1.2,
      "output": 1.2
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": "{% for message in messages %}{% if loop.first and messages[0]['role'] != 'system' %}{{ '<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n' }}{% endif %}{{'<|im_start|>' + message['role'] + '\n' + message['content'] + '<|im_end|>' + '\n'}}{% endfor %}{% if add_generation_prompt %}{{ '<|im_start|>assistant\n' }}{% endif %}",
      "eos_token": null,
      "stop": [
        "<|im_end|>",
        "<|im_start|>"
      ]
    },
    "context_length": 32768,
    "created": 1717792561,
    "display_name": "Qwen 2 Instruct (72B)",
    "id": "Qwen/Qwen2-72B-Instruct",
    "license": "tongyi-qianwen",
    "link": "https://huggingface.co/Qwen/Qwen2-72B-Instruct",
    "object": "model",
    "organization": "Qwen",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.9,
      "output": 0.9
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": "{% set image_count = namespace(value=0) %}{% set video_count = namespace(value=0) %}{% for message in messages %}{% if loop.first and message['role'] != 'system' %}<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n{% endif %}<|im_start|>{{ message['role'] }}\n{% if message['content'] is string %}{{ message['content'] }}<|im_end|>\n{% else %}{% for content in message['content'] %}{% if content['type'] == 'image' or 'image' in content or 'image_url' in content %}{% set image_count.value = image_count.value + 1 %}{% if add_vision_id %}Picture {{ image_count.value }}: {% endif %}<|vision_start|><|image_pad|><|vision_end|>{% elif content['type'] == 'video' or 'video' in content %}{% set video_count.value = video_count.value + 1 %}{% if add_vision_id %}Video {{ video_count.value }}: {% endif %}<|vision_start|><|video_pad|><|vision_end|>{% elif 'text' in content %}{{ content['text'] }}{% endif %}{% endfor %}<|im_end|>\n{% endif %}{% endfor %}{% if add_generation_prompt %}<|im_start|>assistant\n{% endif %}",
      "eos_token": "<|im_end|>",
      "stop": [
        "<|endoftext|>",
        "<|im_end|>"
      ]
    },
    "context_length": 32768,
    "created": 1736448718,
    "display_name": "Qwen2-VL (72B) Instruct",
    "id": "Qwen/Qwen2-VL-72B-Instruct",
    "license": "tongyi-qianwen",
    "link": "https://huggingface.co/Qwen/Qwen2-VL-72B-Instruct",
    "object": "model",
    "organization": "Qwen",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 1.2,
      "output": 1.2
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<|endoftext|>",
      "chat_template": "{%- if tools %}\n    {{- '<|im_start|>system\\n' }}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- messages[0]['content'] }}\n    {%- else %}\n        {{- 'You are Qwen, created by Alibaba Cloud. You are a helpful assistant.' }}\n    {%- endif %}\n    {{- \"\\n\\n# Tools\\n\\nYou may call one or more functions to assist with the user query.\\n\\nYou are provided with function signatures within <tools></tools> XML tags:\\n<tools>\" }}\n    {%- for tool in tools %}\n        {{- \"\\n\" }}\n        {{- tool | tojson }}\n    {%- endfor %}\n    {{- \"\\n</tools>\\n\\nFor each function call, return a json object with function name and arguments within <tool_call></tool_call> XML tags:\\n<tool_call>\\n{\\\"name\\\": <function-name>, \\\"arguments\\\": <args-json-object>}\\n</tool_call><|im_end|>\\n\" }}\n{%- else %}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- '<|im_start|>system\\n' + messages[0]['content'] + '<|im_end|>\\n' }}\n    {%- else %}\n        {{- '<|im_start|>system\\nYou are Qwen, created by Alibaba Cloud. You are a helpful assistant.<|im_end|>\\n' }}\n    {%- endif %}\n{%- endif %}\n{%- for message in messages %}\n    {%- if (message.role == \"user\") or (message.role == \"system\" and not loop.first) or (message.role == \"assistant\" and not message.tool_calls) %}\n        {{- '<|im_start|>' + message.role + '\\n' + message.content + '<|im_end|>' + '\\n' }}\n    {%- elif message.role == \"assistant\" %}\n        {{- '<|im_start|>' + message.role }}\n        {%- if message.content %}\n            {{- '\\n' + message.content }}\n        {%- endif %}\n        {%- for tool_call in message.tool_calls %}\n            {%- if tool_call.function is defined %}\n                {%- set tool_call = tool_call.function %}\n            {%- endif %}\n            {{- '\\n<tool_call>\\n{\"name\": \"' }}\n            {{- tool_call.name }}\n            {{- '\", \"arguments\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- '}\\n</tool_call>' }}\n        {%- endfor %}\n        {{- '<|im_end|>\\n' }}\n    {%- elif message.role == \"tool\" %}\n        {%- if (loop.index0 == 0) or (messages[loop.index0 - 1].role != \"tool\") %}\n            {{- '<|im_start|>user' }}\n        {%- endif %}\n        {{- '\\n<tool_response>\\n' }}\n        {{- message.content }}\n        {{- '\\n</tool_response>' }}\n        {%- if loop.last or (messages[loop.index0 + 1].role != \"tool\") %}\n            {{- '<|im_end|>\\n' }}\n        {%- endif %}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|im_start|>assistant\\n' }}\n{%- endif %}\n",
      "eos_token": "<|im_end|>",
      "stop": [
        "<|im_end|>"
      ]
    },
    "context_length": 131072,
    "created": 1728633510,
    "display_name": "Qwen2.5 72B Instruct Turbo",
    "id": "Qwen/Qwen2.5-72B-Instruct-Turbo",
    "license": "Qwen",
    "link": "https://huggingface.co/Qwen/Qwen2.5-72B-Instruct",
    "object": "model",
    "organization": "Qwen",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 1.2,
      "output": 1.2
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<|endoftext|>",
      "chat_template": "{%- if tools %}\n    {{- '<|im_start|>system\\n' }}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- messages[0]['content'] }}\n    {%- else %}\n        {{- 'You are Qwen, created by Alibaba Cloud. You are a helpful assistant.' }}\n    {%- endif %}\n    {{- \"\\n\\n# Tools\\n\\nYou may call one or more functions to assist with the user query.\\n\\nYou are provided with function signatures within <tools></tools> XML tags:\\n<tools>\" }}\n    {%- for tool in tools %}\n        {{- \"\\n\" }}\n        {{- tool | tojson }}\n    {%- endfor %}\n    {{- \"\\n</tools>\\n\\nFor each function call, return a json object with function name and arguments within <tool_call></tool_call> XML tags:\\n<tool_call>\\n{\\\"name\\\": <function-name>, \\\"arguments\\\": <args-json-object>}\\n</tool_call><|im_end|>\\n\" }}\n{%- else %}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- '<|im_start|>system\\n' + messages[0]['content'] + '<|im_end|>\\n' }}\n    {%- else %}\n        {{- '<|im_start|>system\\nYou are Qwen, created by Alibaba Cloud. You are a helpful assistant.<|im_end|>\\n' }}\n    {%- endif %}\n{%- endif %}\n{%- for message in messages %}\n    {%- if (message.role == \"user\") or (message.role == \"system\" and not loop.first) or (message.role == \"assistant\" and not message.tool_calls) %}\n        {{- '<|im_start|>' + message.role + '\\n' + message.content + '<|im_end|>' + '\\n' }}\n    {%- elif message.role == \"assistant\" %}\n        {{- '<|im_start|>' + message.role }}\n        {%- if message.content %}\n            {{- '\\n' + message.content }}\n        {%- endif %}\n        {%- for tool_call in message.tool_calls %}\n            {%- if tool_call.function is defined %}\n                {%- set tool_call = tool_call.function %}\n            {%- endif %}\n            {{- '\\n<tool_call>\\n{\"name\": \"' }}\n            {{- tool_call.name }}\n            {{- '\", \"arguments\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- '}\\n</tool_call>' }}\n        {%- endfor %}\n        {{- '<|im_end|>\\n' }}\n    {%- elif message.role == \"tool\" %}\n        {%- if (loop.index0 == 0) or (messages[loop.index0 - 1].role != \"tool\") %}\n            {{- '<|im_start|>user' }}\n        {%- endif %}\n        {{- '\\n<tool_response>\\n' }}\n        {{- message.content }}\n        {{- '\\n</tool_response>' }}\n        {%- if loop.last or (messages[loop.index0 + 1].role != \"tool\") %}\n            {{- '<|im_end|>\\n' }}\n        {%- endif %}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|im_start|>assistant\\n' }}\n{%- endif %}\n",
      "eos_token": "<|im_end|>",
      "stop": [
        "<|im_end|>"
      ]
    },
    "context_length": 32768,
    "created": 1728671048,
    "display_name": "Qwen2.5 7B Instruct Turbo",
    "id": "Qwen/Qwen2.5-7B-Instruct-Turbo",
    "license": "Qwen",
    "link": "https://huggingface.co/Qwen/Qwen2.5-7B-Instruct",
    "object": "model",
    "organization": "Qwen",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.3,
      "output": 0.3
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<|endoftext|>",
      "chat_template": "{%- if tools %}\n    {{- '<|im_start|>system\\n' }}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- messages[0]['content'] }}\n    {%- else %}\n        {{- 'You are Qwen, created by Alibaba Cloud. You are a helpful assistant.' }}\n    {%- endif %}\n    {{- \"\\n\\n# Tools\\n\\nYou may call one or more functions to assist with the user query.\\n\\nYou are provided with function signatures within <tools></tools> XML tags:\\n<tools>\" }}\n    {%- for tool in tools %}\n        {{- \"\\n\" }}\n        {{- tool | tojson }}\n    {%- endfor %}\n    {{- \"\\n</tools>\\n\\nFor each function call, return a json object with function name and arguments within <tool_call></tool_call> XML tags:\\n<tool_call>\\n{\\\"name\\\": <function-name>, \\\"arguments\\\": <args-json-object>}\\n</tool_call><|im_end|>\\n\" }}\n{%- else %}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- '<|im_start|>system\\n' + messages[0]['content'] + '<|im_end|>\\n' }}\n    {%- else %}\n        {{- '<|im_start|>system\\nYou are Qwen, created by Alibaba Cloud. You are a helpful assistant.<|im_end|>\\n' }}\n    {%- endif %}\n{%- endif %}\n{%- for message in messages %}\n    {%- if (message.role == \"user\") or (message.role == \"system\" and not loop.first) or (message.role == \"assistant\" and not message.tool_calls) %}\n        {{- '<|im_start|>' + message.role + '\\n' + message.content + '<|im_end|>' + '\\n' }}\n    {%- elif message.role == \"assistant\" %}\n        {{- '<|im_start|>' + message.role }}\n        {%- if message.content %}\n            {{- '\\n' + message.content }}\n        {%- endif %}\n        {%- for tool_call in message.tool_calls %}\n            {%- if tool_call.function is defined %}\n                {%- set tool_call = tool_call.function %}\n            {%- endif %}\n            {{- '\\n<tool_call>\\n{\"name\": \"' }}\n            {{- tool_call.name }}\n            {{- '\", \"arguments\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- '}\\n</tool_call>' }}\n        {%- endfor %}\n        {{- '<|im_end|>\\n' }}\n    {%- elif message.role == \"tool\" %}\n        {%- if (loop.index0 == 0) or (messages[loop.index0 - 1].role != \"tool\") %}\n            {{- '<|im_start|>user' }}\n        {%- endif %}\n        {{- '\\n<tool_response>\\n' }}\n        {{- message.content }}\n        {{- '\\n</tool_response>' }}\n        {%- if loop.last or (messages[loop.index0 + 1].role != \"tool\") %}\n            {{- '<|im_end|>\\n' }}\n        {%- endif %}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|im_start|>assistant\\n' }}\n{%- endif %}\n",
      "eos_token": "<|im_end|>",
      "stop": [
        "<|im_end|>"
      ]
    },
    "context_length": 16384,
    "created": 1731556615,
    "display_name": "Qwen 2.5 Coder 32B Instruct",
    "id": "Qwen/Qwen2.5-Coder-32B-Instruct",
    "license": "Qwen",
    "link": "https://huggingface.co/Qwen/Qwen2.5-Coder-32B-Instruct",
    "object": "model",
    "organization": "Qwen",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.8,
      "output": 0.8
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<|begin_of_text|>",
      "chat_template": "{% set loop_messages = messages %}{% for message in loop_messages %}{% set content = '<|start_header_id|>' + message['role'] + '<|end_header_id|>\n\n'+ message['content'] | trim + '<|eot_id|>' %}{% if loop.index0 == 0 %}{% set content = bos_token + content %}{% endif %}{{ content }}{% endfor %}{% if add_generation_prompt %}{{ '<|start_header_id|>assistant<|end_header_id|>\n\nAfter carefully reading the query, document, and guidelines, I have determined that the relevance score is: ' }}{% endif %}",
      "eos_token": "<|eot_id|>",
      "stop": [
        "<|eot_id|>"
      ]
    },
    "context_length": 8192,
    "created": 1723745254,
    "display_name": "Salesforce Llama Rank V1 (8B)",
    "id": "Salesforce/Llama-Rank-V1",
    "license": "llama3",
    "object": "model",
    "organization": "salesforce",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.1,
      "output": 0.1
    },
    "running": false,
    "type": "rerank"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": null,
      "eos_token": null,
      "stop": []
    },
    "created": 1703216381,
    "display_name": "UAE-Large-V1",
    "id": "WhereIsAI/UAE-Large-V1",
    "license": "apache-2.0",
    "link": "https://huggingface.co/bert-base-uncased",
    "object": "model",
    "organization": "WhereIsAI",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.016,
      "output": 0.016
    },
    "running": false,
    "type": "embedding"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": null,
      "eos_token": null,
      "stop": []
    },
    "created": 1732144835,
    "display_name": "FLUX.1 Canny [dev]",
    "id": "black-forest-labs/FLUX.1-canny",
    "link": "https://huggingface.co/black-forest-labs/FLUX.1-Canny-dev",
    "object": "model",
    "organization": "Black Forest Labs",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0,
      "output": 0
    },
    "running": false,
    "type": "image"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": null,
      "eos_token": null,
      "stop": []
    },
    "created": 1732141533,
    "display_name": "FLUX.1 Depth [dev]",
    "id": "black-forest-labs/FLUX.1-depth",
    "link": "https://huggingface.co/black-forest-labs/FLUX.1-Depth-dev",
    "object": "model",
    "organization": "Black Forest Labs",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0,
      "output": 0
    },
    "running": false,
    "type": "image"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": null,
      "eos_token": null,
      "stop": []
    },
    "created": 1732138026,
    "display_name": "FLUX.1 [dev]",
    "id": "black-forest-labs/FLUX.1-dev",
    "link": "https://huggingface.co/black-forest-labs/FLUX.1-dev",
    "object": "model",
    "organization": "Black Forest Labs",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0,
      "output": 0
    },
    "running": false,
    "type": "image"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": null,
      "eos_token": null,
      "stop": []
    },
    "created": 1736906515,
    "display_name": "FLUX.1 [dev] LoRA",
    "id": "black-forest-labs/FLUX.1-dev-lora",
    "link": "https://huggingface.co/black-forest-labs/FLUX.1-dev",
    "object": "model",
    "organization": "Black Forest Labs",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0,
      "output": 0
    },
    "running": false,
    "type": "image"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": null,
      "eos_token": null,
      "stop": []
    },
    "created": 0,
    "display_name": "FLUX.1 [pro]",
    "id": "black-forest-labs/FLUX.1-pro",
    "link": "https://huggingface.co/black-forest-labs/FLUX.1-schnell",
    "object": "model",
    "organization": "Black Forest Labs",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0,
      "output": 0
    },
    "running": false,
    "type": "image"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": null,
      "eos_token": null,
      "stop": []
    },
    "created": 1732148338,
    "display_name": "FLUX.1 Redux [dev]",
    "id": "black-forest-labs/FLUX.1-redux",
    "link": "https://huggingface.co/black-forest-labs/FLUX.1-Redux-dev",
    "object": "model",
    "organization": "Black Forest Labs",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0,
      "output": 0
    },
    "running": false,
    "type": "image"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": null,
      "eos_token": null,
      "stop": []
    },
    "created": 0,
    "display_name": "FLUX.1 Schnell",
    "id": "black-forest-labs/FLUX.1-schnell",
    "link": "https://huggingface.co/black-forest-labs/FLUX.1-schnell",
    "object": "model",
    "organization": "Black Forest Labs",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0,
      "output": 0
    },
    "running": false,
    "type": "image"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": null,
      "eos_token": null,
      "stop": []
    },
    "created": 0,
    "display_name": "FLUX.1 [schnell] Free",
    "id": "black-forest-labs/FLUX.1-schnell-Free",
    "link": "https://huggingface.co/black-forest-labs/FLUX.1-schnell",
    "object": "model",
    "organization": "Black Forest Labs",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0,
      "output": 0
    },
    "running": false,
    "type": "image"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": null,
      "eos_token": null,
      "stop": []
    },
    "created": 0,
    "display_name": "FLUX1.1 [pro]",
    "id": "black-forest-labs/FLUX.1.1-pro",
    "link": "https://huggingface.co/black-forest-labs/FLUX.1-schnell",
    "object": "model",
    "organization": "Black Forest Labs",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0,
      "output": 0
    },
    "running": false,
    "type": "image"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": null,
      "eos_token": null,
      "stop": []
    },
    "context_length": 0,
    "created": 0,
    "display_name": "Cartesia/Sonic",
    "id": "cartesia/sonic",
    "link": "https://www.cartesia.ai",
    "object": "model",
    "organization": "Together",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 65,
      "output": 0
    },
    "running": false,
    "type": "audio"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": "{% for message in messages %}{{'<|im_start|>' + message['role'] + '\n' + message['content'] + '<|im_end|>' + '\n'}}{% endfor %}{% if add_generation_prompt %}{{ '<|im_start|>assistant\n' }}{% endif %}",
      "eos_token": null,
      "stop": [
        "<|im_end|>",
        "<|im_start|>"
      ]
    },
    "context_length": 32768,
    "created": 0,
    "display_name": "DBRX Instruct",
    "id": "databricks/dbrx-instruct",
    "license": "Databricks Open Model License",
    "link": "https://huggingface.co/databricks/dbrx-instruct",
    "object": "model",
    "organization": "Databricks",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 1.2,
      "output": 1.2
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<｜begin▁of▁sentence｜>",
      "chat_template": "{% if not add_generation_prompt is defined %}{% set add_generation_prompt = false %}{% endif %}{% set system_prompt='' %}{% set is_tool = false %}{%- for message in messages %}{%- if message['role'] == 'system' %}{% set system_prompt = message['content'] %}{%- endif %}{%- endfor %}{{bos_token}}{{system_prompt}}{%- for message in messages %}{%- if message['role'] == 'user' %}{%- set is_tool = false -%}{{'<｜User｜>' + message['content']}}{%- endif %}{%- if message['role'] == 'assistant' and message['content'] is none %}{%- set is_tool = false -%}{%- set is_output_first = true -%}{%- set is_first = false -%}{%- for tool in message['tool_calls']%}{%- if is_first %}{{'<｜Assistant｜><｜tool▁calls▁begin｜><｜tool▁call▁begin｜>' + tool['type'] + '<｜tool▁sep｜>' + tool['function']['name'] + '\\n' + '```json' + '\\n' + tool['function']['arguments'] + '\\n' + '```' + '<｜tool▁call▁end｜>'}}{%- set is_first = true -%}{%- else %}{{'\\n' + '<｜tool▁call▁begin｜>' + tool['type'] + '<｜tool▁sep｜>' + tool['function']['name'] + '\\n' + '```json' + '\\n' + tool['function']['arguments'] + '\\n' + '```' + '<｜tool▁call▁end｜>'}}{{'<｜tool▁calls▁end｜><｜end▁of▁sentence｜>'}}{%- endif %}{%- endfor %}{%- endif %}{%- if message['role'] == 'assistant' and message['content'] is not none %}{%- if is_tool %}{{'<｜tool▁outputs▁end｜>' + message['content'] + '<｜end▁of▁sentence｜>'}}{%- set is_tool = false -%}{%- else %}{% set content = message['content'] %}{% if '</think>' in content %}{% set parts = content | split('</think>') %}{% set content = parts[parts.length-1] %}{% endif %}{{'<｜Assistant｜>' + content + '<｜end▁of▁sentence｜>'}}{%- endif %}{%- endif %}{%- if message['role'] == 'tool' %}{%- set is_tool = true -%}{%- if is_output_first %}{{'<｜tool▁outputs▁begin｜><｜tool▁output▁begin｜>' + message['content'] + '<｜tool▁output▁end｜>'}}{%- set is_output_first = false %}{%- else %}{{'\\n<｜tool▁output▁begin｜>' + message['content'] + '<｜tool▁output▁end｜>'}}{%- endif %}{%- endif %}{%- endfor -%}{% if is_tool %}{{'<｜tool▁outputs▁end｜>'}}{% endif %}{% if add_generation_prompt and not is_tool %}{{'<｜Assistant｜>'}}{% endif %}",
      "eos_token": "<｜end▁of▁sentence｜>",
      "stop": [
        "<｜end▁of▁sentence｜>"
      ]
    },
    "context_length": 163840,
    "created": 1737396322,
    "display_name": "DeepSeek R1",
    "id": "deepseek-ai/DeepSeek-R1",
    "link": "https://huggingface.co/deepseek-ai/DeepSeek-R1",
    "object": "model",
    "organization": "DeepSeek",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 3,
      "output": 7
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<｜begin▁of▁sentence｜>",
      "chat_template": "{% if not add_generation_prompt is defined %}{% set add_generation_prompt = false %}{% endif %}{% set system_prompt='' %}{% set is_tool = false %}{%- for message in messages %}{%- if message['role'] == 'system' %}{% set system_prompt = message['content'] %}{%- endif %}{%- endfor %}{{bos_token}}{{system_prompt}}{%- for message in messages %}{%- if message['role'] == 'user' %}{%- set is_tool = false -%}{{'<｜User｜>' + message['content']}}{%- endif %}{%- if message['role'] == 'assistant' and message['content'] is none %}{%- set is_tool = false -%}{%- set is_output_first = true -%}{%- set is_first = false -%}{%- for tool in message['tool_calls']%}{%- if is_first %}{{'<｜Assistant｜><｜tool▁calls▁begin｜><｜tool▁call▁begin｜>' + tool['type'] + '<｜tool▁sep｜>' + tool['function']['name'] + '\\n' + '```json' + '\\n' + tool['function']['arguments'] + '\\n' + '```' + '<｜tool▁call▁end｜>'}}{%- set is_first = true -%}{%- else %}{{'\\n' + '<｜tool▁call▁begin｜>' + tool['type'] + '<｜tool▁sep｜>' + tool['function']['name'] + '\\n' + '```json' + '\\n' + tool['function']['arguments'] + '\\n' + '```' + '<｜tool▁call▁end｜>'}}{{'<｜tool▁calls▁end｜><｜end▁of▁sentence｜>'}}{%- endif %}{%- endfor %}{%- endif %}{%- if message['role'] == 'assistant' and message['content'] is not none %}{%- if is_tool %}{{'<｜tool▁outputs▁end｜>' + message['content'] + '<｜end▁of▁sentence｜>'}}{%- set is_tool = false -%}{%- else %}{% set content = message['content'] %}{% if '</think>' in content %}{% set parts = content | split('</think>') %}{% set content = parts[parts.length-1] %}{% endif %}{{'<｜Assistant｜>' + content + '<｜end▁of▁sentence｜>'}}{%- endif %}{%- endif %}{%- if message['role'] == 'tool' %}{%- set is_tool = true -%}{%- if is_output_first %}{{'<｜tool▁outputs▁begin｜><｜tool▁output▁begin｜>' + message['content'] + '<｜tool▁output▁end｜>'}}{%- set is_output_first = false %}{%- else %}{{'\\n<｜tool▁output▁begin｜>' + message['content'] + '<｜tool▁output▁end｜>'}}{%- endif %}{%- endif %}{%- endfor -%}{% if is_tool %}{{'<｜tool▁outputs▁end｜>'}}{% endif %}{% if add_generation_prompt and not is_tool %}{{'<｜Assistant｜>'}}{% endif %}",
      "eos_token": "<｜end▁of▁sentence｜>",
      "stop": [
        "<｜end▁of▁sentence｜>"
      ]
    },
    "context_length": 131072,
    "created": 1738048961,
    "display_name": "DeepSeek R1 Distill Llama 70B",
    "id": "deepseek-ai/DeepSeek-R1-Distill-Llama-70B",
    "license": "mit",
    "link": "https://huggingface.co/deepseek-ai/DeepSeek-R1-Distill-Llama-70B",
    "object": "model",
    "organization": "DeepSeek",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 2,
      "output": 2
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<｜begin▁of▁sentence｜>",
      "chat_template": "{% if not add_generation_prompt is defined %}{% set add_generation_prompt = false %}{% endif %}{% set system_prompt='' %}{% set is_tool = false %}{%- for message in messages %}{%- if message['role'] == 'system' %}{% set system_prompt = message['content'] %}{%- endif %}{%- endfor %}{{bos_token}}{{system_prompt}}{%- for message in messages %}{%- if message['role'] == 'user' %}{%- set is_tool = false -%}{{'<｜User｜>' + message['content']}}{%- endif %}{%- if message['role'] == 'assistant' and message['content'] is none %}{%- set is_tool = false -%}{%- set is_output_first = true -%}{%- set is_first = false -%}{%- for tool in message['tool_calls']%}{%- if is_first %}{{'<｜Assistant｜><｜tool▁calls▁begin｜><｜tool▁call▁begin｜>' + tool['type'] + '<｜tool▁sep｜>' + tool['function']['name'] + '\\n' + '```json' + '\\n' + tool['function']['arguments'] + '\\n' + '```' + '<｜tool▁call▁end｜>'}}{%- set is_first = true -%}{%- else %}{{'\\n' + '<｜tool▁call▁begin｜>' + tool['type'] + '<｜tool▁sep｜>' + tool['function']['name'] + '\\n' + '```json' + '\\n' + tool['function']['arguments'] + '\\n' + '```' + '<｜tool▁call▁end｜>'}}{{'<｜tool▁calls▁end｜><｜end▁of▁sentence｜>'}}{%- endif %}{%- endfor %}{%- endif %}{%- if message['role'] == 'assistant' and message['content'] is not none %}{%- if is_tool %}{{'<｜tool▁outputs▁end｜>' + message['content'] + '<｜end▁of▁sentence｜>'}}{%- set is_tool = false -%}{%- else %}{% set content = message['content'] %}{% if '</think>' in content %}{% set parts = content | split('</think>') %}{% set content = parts[parts.length-1] %}{% endif %}{{'<｜Assistant｜>' + content + '<｜end▁of▁sentence｜>'}}{%- endif %}{%- endif %}{%- if message['role'] == 'tool' %}{%- set is_tool = true -%}{%- if is_output_first %}{{'<｜tool▁outputs▁begin｜><｜tool▁output▁begin｜>' + message['content'] + '<｜tool▁output▁end｜>'}}{%- set is_output_first = false %}{%- else %}{{'\\n<｜tool▁output▁begin｜>' + message['content'] + '<｜tool▁output▁end｜>'}}{%- endif %}{%- endif %}{%- endfor -%}{% if is_tool %}{{'<｜tool▁outputs▁end｜>'}}{% endif %}{% if add_generation_prompt and not is_tool %}{{'<｜Assistant｜>'}}{% endif %}",
      "eos_token": "<｜end▁of▁sentence｜>",
      "stop": [
        "<｜end▁of▁sentence｜>"
      ]
    },
    "context_length": 8192,
    "created": 1738187359,
    "display_name": "DeepSeek R1 Distill Llama 70B Free",
    "id": "deepseek-ai/DeepSeek-R1-Distill-Llama-70B-free",
    "license": "mit",
    "link": "https://huggingface.co/deepseek-ai/DeepSeek-R1-Distill-Llama-70B",
    "object": "model",
    "organization": "DeepSeek",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0,
      "output": 0
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<｜begin▁of▁sentence｜>",
      "chat_template": "{% if not add_generation_prompt %}{% set add_generation_prompt = false %}{% endif %}{# Initialize variables since Nunjucks doesn't support namespace #}{% set is_first = false %}{% set is_tool = false %}{% set is_output_first = true %}{% set system_prompt = '' %}{# Get system prompt #}{% for message in messages %}{% if message.role == 'system' %}{% set system_prompt = message.content %}{% endif %}{% endfor %}{{bos_token}}{{system_prompt}}{% for message in messages %}{% if message.role == 'user' %}{% set is_tool = false %}<｜User｜>{{message.content}}{% endif %}{% if message.role == 'assistant' and not message.content %}{% set is_tool = false %}{% for tool in message.tool_calls %}{% if not is_first %}<｜Assistant｜><｜tool▁calls▁begin｜><｜tool▁call▁begin｜>{{tool.type}}<｜tool▁sep｜>{{tool.function.name}}```json{{tool.function.arguments}}```<｜tool▁call▁end｜>{% set is_first = true %}{% else %}<｜tool▁call▁begin｜>{{tool.type}}<｜tool▁sep｜>{{tool.function.name}}```json{{tool.function.arguments}}```<｜tool▁call▁end｜><｜tool▁calls▁end｜><｜end▁of▁sentence｜>{% endif %}{% endfor %}{% endif %}{% if message.role == 'assistant' and message.content %}{% if is_tool %}<｜tool▁outputs▁end｜>{{message.content}}<｜end▁of▁sentence｜>{% set is_tool = false %}{% else %}{% set content = message.content %}{% if '</think>' in content %}{% set parts = content | split('</think>') %}{% set content = parts[parts.length-1] %}{% endif %}<｜Assistant｜>{{content}}<｜end▁of▁sentence｜>{% endif %}{% endif %}{% if message.role == 'tool' %}{% set is_tool = true %}{% if is_output_first %}<｜tool▁outputs▁begin｜><｜tool▁output▁begin｜>{{message.content}}<｜tool▁output▁end｜>{% set is_output_first = false %}{% else %}<｜tool▁output▁begin｜>{{message.content}}<｜tool▁output▁end｜>{% endif %}{% endif %}{% endfor %}{% if is_tool %}<｜tool▁outputs▁end｜>{% endif %}{% if add_generation_prompt and not is_tool %}<｜Assistant｜>{% endif %}",
      "eos_token": "<｜end▁of▁sentence｜>",
      "stop": [
        "<｜end▁of▁sentence｜>"
      ]
    },
    "context_length": 131072,
    "created": 1738185844,
    "display_name": "DeepSeek R1 Distill Qwen 1.5B",
    "id": "deepseek-ai/DeepSeek-R1-Distill-Qwen-1.5B",
    "license": "mit",
    "link": "https://huggingface.co/deepseek-ai/DeepSeek-R1-Distill-Qwen-1.5B",
    "object": "model",
    "organization": "DeepSeek",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.18000000000000002,
      "output": 0.18000000000000002
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<｜begin▁of▁sentence｜>",
      "chat_template": "{% if not add_generation_prompt %}{% set add_generation_prompt = false %}{% endif %}{# Initialize variables since Nunjucks doesn't support namespace #}{% set is_first = false %}{% set is_tool = false %}{% set is_output_first = true %}{% set system_prompt = '' %}{# Get system prompt #}{% for message in messages %}{% if message.role == 'system' %}{% set system_prompt = message.content %}{% endif %}{% endfor %}{{bos_token}}{{system_prompt}}{% for message in messages %}{% if message.role == 'user' %}{% set is_tool = false %}<｜User｜>{{message.content}}{% endif %}{% if message.role == 'assistant' and not message.content %}{% set is_tool = false %}{% for tool in message.tool_calls %}{% if not is_first %}<｜Assistant｜><｜tool▁calls▁begin｜><｜tool▁call▁begin｜>{{tool.type}}<｜tool▁sep｜>{{tool.function.name}}```json{{tool.function.arguments}}```<｜tool▁call▁end｜>{% set is_first = true %}{% else %}<｜tool▁call▁begin｜>{{tool.type}}<｜tool▁sep｜>{{tool.function.name}}```json{{tool.function.arguments}}```<｜tool▁call▁end｜><｜tool▁calls▁end｜><｜end▁of▁sentence｜>{% endif %}{% endfor %}{% endif %}{% if message.role == 'assistant' and message.content %}{% if is_tool %}<｜tool▁outputs▁end｜>{{message.content}}<｜end▁of▁sentence｜>{% set is_tool = false %}{% else %}{% set content = message.content %}{% if '</think>' in content %}{% set parts = content | split('</think>') %}{% set content = parts[parts.length-1] %}{% endif %}<｜Assistant｜>{{content}}<｜end▁of▁sentence｜>{% endif %}{% endif %}{% if message.role == 'tool' %}{% set is_tool = true %}{% if is_output_first %}<｜tool▁outputs▁begin｜><｜tool▁output▁begin｜>{{message.content}}<｜tool▁output▁end｜>{% set is_output_first = false %}{% else %}<｜tool▁output▁begin｜>{{message.content}}<｜tool▁output▁end｜>{% endif %}{% endif %}{% endfor %}{% if is_tool %}<｜tool▁outputs▁end｜>{% endif %}{% if add_generation_prompt and not is_tool %}<｜Assistant｜>{% endif %}",
      "eos_token": "<｜end▁of▁sentence｜>",
      "stop": [
        "<｜end▁of▁sentence｜>"
      ]
    },
    "context_length": 131072,
    "created": 1738182549,
    "display_name": "DeepSeek R1 Distill Qwen 14B",
    "id": "deepseek-ai/DeepSeek-R1-Distill-Qwen-14B",
    "license": "mit",
    "link": "https://huggingface.co/api/models/deepseek-ai/DeepSeek-R1-Distill-Qwen-14B",
    "object": "model",
    "organization": "DeepSeek",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 1.6,
      "output": 1.6
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<｜begin▁of▁sentence｜>",
      "chat_template": "{% if not add_generation_prompt is defined %}{% set add_generation_prompt = false %}{% endif %}{% set is_first = false %}{% set is_tool = false %}{% set is_output_first = true %}{% set system_prompt='' %}{% set is_first_sp = true %}{%- for message in messages %}{%- if message['role'] == 'system' %}{%- if is_first_sp %}{% set system_prompt = system_prompt + message['content'] %}{% set is_first_sp = false %}{%- else %}{% set system_prompt = system_prompt + '\n\n' + message['content'] %}{%- endif %}{%- endif %}{%- endfor %}{% if tools %}{% set system_prompt = system_prompt + '\n\nYou may call one or more functions to assist with the user query.\n\nYou are provided with function signatures within <tools></tools> XML tags:\n<tools>' + (tools | tojson) + '\n</tools>\n\nFor each function call, return a json object with function name and arguments within <tool_call></tool_call> XML tags:\n<tool_call>\n{\"name\": <function-name>, \"arguments\": <args-json-object>}\n</tool_call>\n' %}{% endif %}{{bos_token}}{{system_prompt}}{%- for message in messages %}{%- if message['role'] == 'user' %}{%- set is_tool = false -%}{{'<｜User｜>' + message['content']}}{%- endif %}{%- if message['role'] == 'assistant' and message['content'] is none %}{%- set is_tool = false -%}{%- for tool in message['tool_calls']%}{%- if not is_first %}{{'<｜Assistant｜><｜tool▁calls▁begin｜><｜tool▁call▁begin｜>' + tool['type'] + '<｜tool▁sep｜>' + tool['function']['name'] + '\n' + '```json' + '\n' + tool['function']['arguments'] + '\n' + '```' + '<｜tool▁call▁end｜>'}}{%- set is_first = true -%}{%- else %}{{'\n' + '<｜tool▁call▁begin｜>' + tool['type'] + '<｜tool▁sep｜>' + tool['function']['name'] + '\n' + '```json' + '\n' + tool['function']['arguments'] + '\n' + '```' + '<｜tool▁call▁end｜>'}}{{'<｜tool▁calls▁end｜><｜end▁of▁sentence｜>'}}{%- endif %}{%- endfor %}{%- endif %}{%- if message['role'] == 'assistant' and message['content'] is not none %}{%- if is_tool %}{{'<｜tool▁outputs▁end｜>' + message['content'] + '<｜end▁of▁sentence｜>'}}{%- set is_tool = false -%}{%- else %}{{'<｜Assistant｜>' + message['content'] + '<｜end▁of▁sentence｜>'}}{%- endif %}{%- endif %}{%- if message['role'] == 'tool' %}{%- set is_tool = true -%}{%- if is_output_first %}{{'<｜tool▁outputs▁begin｜><｜tool▁output▁begin｜>' + message['content'] + '<｜tool▁output▁end｜>'}}{%- set is_output_first = false %}{%- else %}{{'\n<｜tool▁output▁begin｜>' + message['content'] + '<｜tool▁output▁end｜>'}}{%- endif %}{%- endif %}{%- endfor -%}{% if is_tool %}{{'<｜tool▁outputs▁end｜>'}}{% endif %}{% if add_generation_prompt and not is_tool %}{{'<｜Assistant｜>'}}{% endif %}",
      "eos_token": "<｜end▁of▁sentence｜>",
      "stop": [
        "<｜end▁of▁sentence｜>"
      ]
    },
    "context_length": 131072,
    "created": 1735450433,
    "display_name": "DeepSeek V3",
    "id": "deepseek-ai/DeepSeek-V3",
    "link": "https://huggingface.co/deepseek-ai/DeepSeek-V3",
    "object": "model",
    "organization": "DeepSeek",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 1.25,
      "output": 1.25
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<bos>",
      "chat_template": "{{ bos_token }}{% for message in messages %}{% if (message['role'] == 'assistant') %}{% set role = 'model' %}{% else %}{% set role = message['role'] %}{% endif %}{{ '<start_of_turn>' + role + '\n' + message['content'] | trim + '<end_of_turn>\n' }}{% endfor %}{% if add_generation_prompt %}{{'<start_of_turn>model\n'}}{% endif %}",
      "eos_token": "<end_of_turn>",
      "stop": [
        "<end_of_turn>",
        "<eos>"
      ]
    },
    "context_length": 8192,
    "created": 1708648606,
    "display_name": "Gemma-2 Instruct (27B)",
    "id": "google/gemma-2-27b-it",
    "license": "gemma-terms-of-use",
    "link": "https://huggingface.co/google/gemma-2b-it",
    "object": "model",
    "organization": "Google",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.8,
      "output": 0.8
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<bos>",
      "chat_template": "{{ bos_token }}{% for message in messages %}{% if (message['role'] == 'assistant') %}{% set role = 'model' %}{% else %}{% set role = message['role'] %}{% endif %}{{ '<start_of_turn>' + role + '\n' + message['content'] | trim + '<end_of_turn>\n' }}{% endfor %}{% if add_generation_prompt %}{{'<start_of_turn>model\n'}}{% endif %}",
      "eos_token": null,
      "stop": [
        "<end_of_turn>",
        "<eos>"
      ]
    },
    "context_length": 8192,
    "created": 1708648606,
    "display_name": "Gemma-2 Instruct (9B)",
    "id": "google/gemma-2-9b-it",
    "license": "gemma",
    "link": "https://huggingface.co/google/gemma-2-9b-it",
    "object": "model",
    "organization": "google",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.3,
      "output": 0.3
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<bos>",
      "chat_template": "{{ bos_token }}{% if (message['role'] == 'assistant') %}{% set role = 'model' %}{% else %}{% set role = message['role'] %}{% endif %}{% for message in messages %}{{'<start_of_turn>' + role + '\n' + message['content'] + '<end_of_turn>' + '\n'}}{% endfor %}{% if add_generation_prompt %}{{ '<|im_start|>model\n' }}{% endif %}",
      "eos_token": null,
      "stop": [
        "<end_of_turn>",
        "<eos>"
      ]
    },
    "context_length": 8192,
    "created": 1708648606,
    "display_name": "Gemma Instruct (2B)",
    "id": "google/gemma-2b-it",
    "license": "gemma-terms-of-use",
    "link": "https://huggingface.co/google/gemma-2b-it",
    "object": "model",
    "organization": "Google",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.1,
      "output": 0.1
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<s>",
      "chat_template": null,
      "eos_token": "</s>",
      "stop": [
        "</s>"
      ]
    },
    "context_length": 4096,
    "created": 1736983494,
    "display_name": "LLaMA-2 (70B)",
    "id": "meta-llama-llama-2-70b-hf",
    "license": "llama2",
    "link": "https://huggingface.co/api/models/meta-llama/Llama-2-70b-hf",
    "object": "model",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.9,
      "output": 0.9
    },
    "running": false,
    "type": "language"
  },
  {
    "config": {
      "bos_token": "<s>",
      "chat_template": "{% if messages[0]['role'] == 'system' %}{% set loop_messages = messages[1:] %}{% set system_message = messages[0]['content'] %}{% else %}{% set loop_messages = messages %}{% set system_message = false %}{% endif %}{% for message in loop_messages %}{% if loop.index0 == 0 and system_message != false %}{% set content = '<<SYS>>\\n' + system_message + '\\n<</SYS>>\\n\\n' + message['content'] %}{% else %}{% set content = message['content'] %}{% endif %}{% if message['role'] == 'user' or message['role'] == 'tool' %}{{ bos_token + '[INST] ' + content + ' [/INST]' }}{% elif message['role'] == 'system' %}{{ '<<SYS>>\\n' + content + '\\n<</SYS>>\\n\\n' }}{% elif message['role'] == 'assistant' %}{{ ' '  + content + ' ' + eos_token }}{% endif %}{% endfor %}",
      "eos_token": "</s>",
      "stop": [
        "</s>",
        "[/INST]"
      ]
    },
    "context_length": 4096,
    "created": 1689720415,
    "display_name": "LLaMA-2 Chat (13B)",
    "id": "meta-llama/Llama-2-13b-chat-hf",
    "license": "LLaMA license Agreement (Meta)",
    "link": "https://huggingface.co/meta-llama/Llama-2-13b-chat-hf",
    "object": "model",
    "organization": "Meta",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.22,
      "output": 0.22
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<s>",
      "chat_template": null,
      "eos_token": "</s>",
      "stop": [
        "</s>"
      ]
    },
    "context_length": 4096,
    "created": 1689720415,
    "display_name": "LLaMA-2 (70B)",
    "id": "meta-llama/Llama-2-70b-hf",
    "license": "llama2",
    "link": "https://huggingface.co/api/models/meta-llama/Llama-2-70b-hf",
    "object": "model",
    "organization": "Meta",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.9,
      "output": 0.9
    },
    "running": false,
    "type": "language"
  },
  {
    "config": {
      "bos_token": "<s>",
      "chat_template": "{% if messages[0]['role'] == 'system' %}{% set loop_messages = messages[1:] %}{% set system_message = messages[0]['content'] %}{% else %}{% set loop_messages = messages %}{% set system_message = false %}{% endif %}{% for message in loop_messages %}{% if loop.index0 == 0 and system_message != false %}{% set content = '<<SYS>>\\n' + system_message + '\\n<</SYS>>\\n\\n' + message['content'] %}{% else %}{% set content = message['content'] %}{% endif %}{% if message['role'] == 'user' or message['role'] == 'tool' %}{{ bos_token + '[INST] ' + content + ' [/INST]' }}{% elif message['role'] == 'system' %}{{ '<<SYS>>\\n' + content + '\\n<</SYS>>\\n\\n' }}{% elif message['role'] == 'assistant' %}{{ ' '  + content + ' ' + eos_token }}{% endif %}{% endfor %}",
      "eos_token": "</s>",
      "stop": [
        "</s>",
        "[/INST]"
      ]
    },
    "context_length": 4096,
    "created": 1689720415,
    "display_name": "LLaMA-2 Chat (7B)",
    "id": "meta-llama/Llama-2-7b-chat-hf",
    "license": "LLaMA license Agreement (Meta)",
    "link": "https://huggingface.co/meta-llama/Llama-2-7b-chat-hf",
    "object": "model",
    "organization": "Meta",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.2,
      "output": 0.2
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<|begin_of_text|>",
      "chat_template": "{% set loop_messages = messages %}{% for message in loop_messages %}{% set content = '<|start_header_id|>' + message['role'] + '<|end_header_id|>\n\n'+ message['content'] | trim + '<|eot_id|>' %}{% if loop.index0 == 0 %}{% set content = bos_token + content %}{% endif %}{{ content }}{% endfor %}{{ '<|start_header_id|>assistant<|end_header_id|>\n\n' }}",
      "eos_token": "<|end_of_text|>",
      "stop": [
        "<|eot_id|>"
      ]
    },
    "context_length": 8192,
    "created": 1713429236,
    "display_name": "Meta Llama 3 70B Instruct Reference",
    "id": "meta-llama/Llama-3-70b-chat-hf",
    "license": "Llama-3 (Other)",
    "link": "https://huggingface.co/meta-llama/Meta-Llama-3-70B-Instruct",
    "object": "model",
    "organization": "Meta",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.88,
      "output": 0.88
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<|begin_of_text|>",
      "chat_template": "{% set loop_messages = messages %}{% for message in loop_messages %}{% set content = '<|start_header_id|>' + message['role'] + '<|end_header_id|>\n\n'+ message['content'] | trim + '<|eot_id|>' %}{% if loop.index0 == 0 %}{% set content = bos_token + content %}{% endif %}{{ content }}{% endfor %}{{ '<|start_header_id|>assistant<|end_header_id|>\n\n' }}",
      "eos_token": "<|end_of_text|>",
      "stop": [
        "<|eot_id|>"
      ]
    },
    "context_length": 8192,
    "created": 1713420479,
    "display_name": "Meta Llama 3 8B Instruct Reference",
    "id": "meta-llama/Llama-3-8b-chat-hf",
    "license": "Llama-3 (Other)",
    "link": "https://huggingface.co/meta-llama/Meta-Llama-3-8B-Instruct",
    "object": "model",
    "organization": "Meta",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.2,
      "output": 0.2
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<|begin_of_text|>",
      "chat_template": "{% for message in messages %}\n{% if loop.index0 == 0 %}{{ bos_token }}{% endif %}\n{{ '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n' }}\n{% if message['content'] is string %}\n{{ message['content'] }}\n{% else %}\n{% for content in message['content'] | sort(attribute=\"type\") %}\n{% if content['type'] == 'image' %}\n{{ '<|image|>' }}\n{% elif content['type'] == 'text' %}\n{{ content['text'] }}\n{% endif %}\n{% endfor %}\n{% endif %}\n{{ '<|eot_id|>' }}\n{% endfor %}\n{% if add_generation_prompt %}\n{{ '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{% endif %}",
      "eos_token": "<|eot_id|>",
      "stop": [
        "<|eom_id|>",
        "<|eot_id|>"
      ]
    },
    "context_length": 131072,
    "created": 1727218691,
    "display_name": "Meta Llama 3.2 11B Vision Instruct Turbo",
    "id": "meta-llama/Llama-3.2-11B-Vision-Instruct-Turbo",
    "license": "llama",
    "link": "https://huggingface.co/meta-llama/Meta-Llama-3.1-405B-Instruct",
    "object": "model",
    "organization": "Meta",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.18000000000000002,
      "output": 0.18000000000000002
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<|begin_of_text|>",
      "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- if strftime_now is defined %}\n        {%- set date_string = strftime_now(\"%d %b %Y\") %}\n    {%- else %}\n        {%- set date_string = \"26 Jul 2024\" %}\n    {%- endif %}\n{%- endif %}\n{%- if not tools is defined %}\n    {%- set tools = none %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- System message #}\n{{- \"<|start_header_id|>system<|end_header_id|>\\n\\n\" }}\n{%- if tools is not none %}\n    {{- \"Environment: ipython\\n\" }}\n{%- endif %}\n{{- \"Cutting Knowledge Date: December 2023\\n\" }}\n{{- \"Today Date: \" + date_string + \"\\n\\n\" }}\n{%- if tools is not none and not tools_in_user_message %}\n    {{- \"You have access to the following functions. To call a function, please respond with JSON for a function call.\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n{%- endif %}\n{{- system_message }}\n{{- \"<|eot_id|>\" }}\n\n{#- Custom tools are passed in a user message with some extra guidance #}\n{%- if tools_in_user_message and not tools is none %}\n    {#- Extract the first user message so we can plug it in here #}\n    {%- if messages | length != 0 %}\n        {%- set first_user_message = messages[0]['content']|trim %}\n        {%- set messages = messages[1:] %}\n    {%- else %}\n        {{- raise_exception(\"Cannot put tools in the first user message when there's no first user message!\") }}\n{%- endif %}\n    {{- '<|start_header_id|>user<|end_header_id|>\\n\\n' -}}\n    {{- \"Given the following functions, please respond with a JSON for a function call \" }}\n    {{- \"with its proper arguments that best answers the given prompt.\\n\\n\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n    {{- first_user_message + \"<|eot_id|>\"}}\n{%- endif %}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n        {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n'+ message['content'] | trim + '<|eot_id|>' }}\n    {%- elif 'tool_calls' in message %}\n        {%- if not message.tool_calls|length == 1 %}\n            {{- raise_exception(\"This model only supports single tool-calls at once!\") }}\n        {%- endif %}\n        {%- set tool_call = message.tool_calls[0].function %}\n        {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n        {{- '{\"name\": \"' + tool_call.name + '\", ' }}\n        {{- '\"parameters\": ' }}\n        {{- tool_call.arguments | tojson }}\n        {{- \"}\" }}\n        {{- \"<|eot_id|>\" }}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|start_header_id|>ipython<|end_header_id|>\\n\\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | tojson }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{%- endif %}\n",
      "eos_token": "<|eot_id|>",
      "stop": [
        "<|eom_id|>",
        "<|eot_id|>"
      ]
    },
    "context_length": 131072,
    "created": 1727229064,
    "display_name": "Meta Llama 3.2 3B Instruct Turbo",
    "id": "meta-llama/Llama-3.2-3B-Instruct-Turbo",
    "license": "Llama-3.1 (Other)",
    "link": "https://huggingface.co/meta-llama/Llama-3.2-3B-Instruct",
    "object": "model",
    "organization": "Meta",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.060000000000000005,
      "output": 0.060000000000000005
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<|begin_of_text|>",
      "chat_template": "{% for message in messages %}\n{% if loop.index0 == 0 %}{{ bos_token }}{% endif %}\n{{ '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n' }}\n{% if message['content'] is string %}\n{{ message['content'] }}\n{% else %}\n{% for content in message['content'] | sort(attribute=\"type\") %}\n{% if content['type'] == 'image' %}\n{{ '<|image|>' }}\n{% elif content['type'] == 'text' %}\n{{ content['text'] }}\n{% endif %}\n{% endfor %}\n{% endif %}\n{{ '<|eot_id|>' }}\n{% endfor %}\n{% if add_generation_prompt %}\n{{ '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{% endif %}",
      "eos_token": "<|eot_id|>",
      "stop": [
        "<|eom_id|>",
        "<|eot_id|>"
      ]
    },
    "context_length": 131072,
    "created": 1727227657,
    "display_name": "Meta Llama 3.2 90B Vision Instruct Turbo",
    "id": "meta-llama/Llama-3.2-90B-Vision-Instruct-Turbo",
    "license": "llama",
    "link": "https://huggingface.co/meta-llama/Llama-3.2-90B-Vision-Instruct",
    "object": "model",
    "organization": "Meta",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 1.2,
      "output": 1.2
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<|begin_of_text|>",
      "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- set date_string = \"26 Jul 2024\" %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- System message + builtin tools #}\n{{- \"<|start_header_id|>system<|end_header_id|>\n\n\" }}\n{%- if builtin_tools is defined or tools %}\n    {{- \"Environment: ipython\n\" }}\n{%- endif %}\n{%- if builtin_tools is defined %}\n    {{- \"Tools: \" + builtin_tools | reject('equalto', 'code_interpreter') | join(\", \") + \"\n\n\"}}\n{%- endif %}\n{{- \"Cutting Knowledge Date: December 2023\n\" }}\n{{- \"Today Date: \" + date_string + \"\n\n\" }}\n{%- if tools %}\n    {{- \"You have access to the following functions:\n\n\" }}{%- for t in tools %}\n        {{- \"Use the function '\" + t.function.name + \"' to '\" + t.function.description + \"'\n\" }}\n        {{- t.function | dump(4) }}\n        {{- \"\n\n\" }}\n    {%- endfor %}\n{% raw %}If a you choose to call a function ONLY reply in the following format:\n<{start_tag}={function_name}>{parameters}{end_tag}\nwhere\n\nstart_tag => `<function`\nparameters => a JSON dict with the function argument name as key and function argument value as value.\nend_tag => `</function>`\n\nHere is an example,\n<function=example_function_name>{\"example_name\": \"example_value\"}</function>\n\nReminder:\n- Function calls MUST follow the specified format\n- Required parameters MUST be specified\n- Only call one function at a time\n- Put the entire function call reply on one line\n- Always add your sources when using search results to answer the user query\n\n{% endraw %}{%- endif %}\n{{- system_message }}\n{{- \"<|eot_id|>\" }}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n        {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\n\n'+ message['content'] | trim + '<|eot_id|>' }}\n    {%- elif 'tool_calls' in message %}\n        {%- if not message.tool_calls|length == 1 %}\n            {{- raise_exception(\"This model only supports single tool-calls at once!\") }}\n        {%- endif %}\n        {%- set tool_call = message.tool_calls[0].function %}\n        {%- if builtin_tools is defined and tool_call.name in builtin_tools %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\n\n' -}}\n            {{- \"<|python_tag|>\" + tool_call.name + \".call(\" }}\n            {%- for arg_name, arg_val in tool_call.arguments | items %}\n                {{- arg_name + '=\"' + arg_val + '\"' }}\n                {%- if not loop.last %}\n                    {{- \", \" }}\n                {%- endif %}\n                {%- endfor %}\n            {{- \")\" }}\n        {%- else  %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\n\n' -}}\n            {{- '{\"name\": \"' + tool_call.name + '\", ' }}\n            {{- '\"parameters\": ' }}\n            {{- tool_call.arguments | dump }}\n            {{- \"}\" }}\n        {%- endif %}\n        {%- if builtin_tools is defined %}\n            {#- This means we're in ipython mode #}\n            {{- \"<|eom_id|>\" }}\n        {%- else %}\n            {{- \"<|eot_id|>\" }}\n        {%- endif %}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|start_header_id|>ipython<|end_header_id|>\n\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | dump }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\n\n' }}{%- endif %}",
      "eos_token": "<|eot_id|>",
      "stop": [
        "<|eom_id|>",
        "<|eot_id|>"
      ]
    },
    "context_length": 131072,
    "created": 1733466629,
    "display_name": "Meta Llama 3.3 70B Instruct Turbo",
    "id": "meta-llama/Llama-3.3-70B-Instruct-Turbo",
    "license": "Llama-3.3 (Other)",
    "link": "https://huggingface.co/meta-llama/Llama-3.3-70B-Instruct",
    "object": "model",
    "organization": "Meta",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.88,
      "output": 0.88
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<|begin_of_text|>",
      "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- set date_string = \"26 Jul 2024\" %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- System message + builtin tools #}\n{{- \"<|start_header_id|>system<|end_header_id|>\n\n\" }}\n{%- if builtin_tools is defined or tools %}\n    {{- \"Environment: ipython\n\" }}\n{%- endif %}\n{%- if builtin_tools is defined %}\n    {{- \"Tools: \" + builtin_tools | reject('equalto', 'code_interpreter') | join(\", \") + \"\n\n\"}}\n{%- endif %}\n{{- \"Cutting Knowledge Date: December 2023\n\" }}\n{{- \"Today Date: \" + date_string + \"\n\n\" }}\n{%- if tools %}\n    {{- \"You have access to the following functions:\n\n\" }}{%- for t in tools %}\n        {{- \"Use the function '\" + t.function.name + \"' to '\" + t.function.description + \"'\n\" }}\n        {{- t.function | dump(4) }}\n        {{- \"\n\n\" }}\n    {%- endfor %}\n{% raw %}If a you choose to call a function ONLY reply in the following format:\n<{start_tag}={function_name}>{parameters}{end_tag}\nwhere\n\nstart_tag => `<function`\nparameters => a JSON dict with the function argument name as key and function argument value as value.\nend_tag => `</function>`\n\nHere is an example,\n<function=example_function_name>{\"example_name\": \"example_value\"}</function>\n\nReminder:\n- Function calls MUST follow the specified format\n- Required parameters MUST be specified\n- Only call one function at a time\n- Put the entire function call reply on one line\n- Always add your sources when using search results to answer the user query\n\n{% endraw %}{%- endif %}\n{{- system_message }}\n{{- \"<|eot_id|>\" }}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n        {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\n\n'+ message['content'] | trim + '<|eot_id|>' }}\n    {%- elif 'tool_calls' in message %}\n        {%- if not message.tool_calls|length == 1 %}\n            {{- raise_exception(\"This model only supports single tool-calls at once!\") }}\n        {%- endif %}\n        {%- set tool_call = message.tool_calls[0].function %}\n        {%- if builtin_tools is defined and tool_call.name in builtin_tools %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\n\n' -}}\n            {{- \"<|python_tag|>\" + tool_call.name + \".call(\" }}\n            {%- for arg_name, arg_val in tool_call.arguments | items %}\n                {{- arg_name + '=\"' + arg_val + '\"' }}\n                {%- if not loop.last %}\n                    {{- \", \" }}\n                {%- endif %}\n                {%- endfor %}\n            {{- \")\" }}\n        {%- else  %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\n\n' -}}\n            {{- '{\"name\": \"' + tool_call.name + '\", ' }}\n            {{- '\"parameters\": ' }}\n            {{- tool_call.arguments | dump }}\n            {{- \"}\" }}\n        {%- endif %}\n        {%- if builtin_tools is defined %}\n            {#- This means we're in ipython mode #}\n            {{- \"<|eom_id|>\" }}\n        {%- else %}\n            {{- \"<|eot_id|>\" }}\n        {%- endif %}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|start_header_id|>ipython<|end_header_id|>\n\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | dump }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\n\n' }}{%- endif %}",
      "eos_token": "<|eot_id|>",
      "stop": [
        "<|eom_id|>",
        "<|eot_id|>"
      ]
    },
    "context_length": 131072,
    "created": 1733967427,
    "display_name": "Meta Llama 3.3 70B Instruct Turbo Free",
    "id": "meta-llama/Llama-3.3-70B-Instruct-Turbo-Free",
    "license": "Llama-3.3 (Other)",
    "link": "https://huggingface.co/meta-llama/Llama-3.3-70B-Instruct",
    "object": "model",
    "organization": "Meta",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0,
      "output": 0
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<|begin_of_text|>",
      "chat_template": "{%- if messages|length % 2 == 0 -%}\n    {%- set role = 'Agent' -%}\n{%-  else -%}\n    {%-  set role = 'User' -%}\n{%-  endif -%}\n{%-  if categories is not defined -%}\n    {%-  \n        set categories = ({\n            \"S1\": \"Violent Crimes.\",\n            \"S2\": \"Non-Violent Crimes.\",\n            \"S3\": \"Sex Crimes.\",\n            \"S4\": \"Child Exploitation.\",\n            \"S5\": \"Defamation.\",\n            \"S6\": \"Specialized Advice.\",\n            \"S7\": \"Privacy.\",\n            \"S8\": \"Intellectual Property.\",\n            \"S9\": \"Indiscriminate Weapons.\",\n            \"S10\": \"Hate.\",\n            \"S11\": \"Self-Harm.\",\n            \"S12\": \"Sexual Content.\",\n            \"S13\": \"Elections.\",\n        })\n    -%}\n{%-  endif -%}\n\n{{- \"<|begin_of_text|><|start_header_id|>user<|end_header_id|>\\n\\n\" -}}\n{%- set ns = namespace(contains_image=false) -%}\n{%-  for message in messages -%}\n    {%- for content in message['content'] | selectattr('type', 'equalto', 'image') -%}\n        {%- set ns.contains_image = true -%}\n    {%- endfor -%}\n{%- endfor -%}\n{%- if ns.contains_image -%}\n{{- \"<|image|> \"-}}\n{%- endif -%}\n{{- \"Task: Check if there is unsafe content in '\" + role + \"' messages in conversations according our safety policy with the below categories.\\n\\n\" -}}\n{{- \"<BEGIN UNSAFE CONTENT CATEGORIES>\\n\"-}}\n\n{%-  for key in categories -%}\n    {%-  if key not in excluded_category_keys -%}\n        {{-key + \": \" + categories[key] + \"\\n\" -}}\n    {%-  endif -%}\n{%-  endfor -%}\n\n{{- \"<END UNSAFE CONTENT CATEGORIES>\\n\\n\"-}}\n{{- \"<BEGIN CONVERSATION>\\n\\n\"-}}\n{%-  for message in messages -%}\n    {%-  if (message['role'] == 'user') != (loop.index0 % 2 == 0) -%}\n        {{ raise_exception('Conversation roles must alternate user/assistant/user/assistant/...')-}}\n    {%-  endif -%}\n    {%-  set content = message['content'] -%}\n    {%-  if message['role'] == 'user' -%}\n        {%-  set role = 'User' -%}\n    {%-  elif message['role'] == 'assistant' -%}\n        {%-  set role = 'Agent' -%}\n    {%-  endif -%}\n    {%-  for content in message['content'] | selectattr('type', 'equalto', 'text') -%}\n{{- role + ': ' + content['text'] | trim + '\\n\\n'-}}\n    {%-  endfor -%}\n{%-  endfor -%}\n{{- \"<END CONVERSATION>\\n\\n\"-}}\n{{- \"Provide your safety assessment for ONLY THE LAST \" + role + \" message in the above conversation:\\n\"-}}\n{{- \" - First line must read 'safe' or 'unsafe'.\\n\"-}}\n{{- \" - If unsafe, a second line must include a comma-separated list of violated categories. <|eot_id|><|start_header_id|>assistant<|end_header_id|>\"-}}",
      "eos_token": "<|eot_id|>",
      "stop": [
        "<|eom_id|>",
        "<|eot_id|>"
      ]
    },
    "context_length": 131072,
    "created": 1727242489,
    "display_name": "Meta Llama Guard 3 11B Vision Turbo",
    "id": "meta-llama/Llama-Guard-3-11B-Vision-Turbo",
    "license": "llama",
    "link": "https://huggingface.co/meta-llama/Llama-Guard-3-11B-Vision",
    "object": "model",
    "organization": "Meta",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.18000000000000002,
      "output": 0.18000000000000002
    },
    "running": false,
    "type": "moderation"
  },
  {
    "config": {
      "bos_token": "<|begin_of_text|>",
      "chat_template": "{% for message in messages %}\n{% if loop.index0 == 0 %}{{ bos_token }}{% endif %}\n{{ '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n' }}\n{% if message['content'] is string %}\n{{ message['content'] }}\n{% else %}\n{% for content in message['content'] | sort(attribute=\"type\") %}\n{% if content['type'] == 'image' %}\n{{ '<|image|>' }}\n{% elif content['type'] == 'text' %}\n{{ content['text'] }}\n{% endif %}\n{% endfor %}\n{% endif %}\n{{ '<|eot_id|>' }}\n{% endfor %}\n{% if add_generation_prompt %}\n{{ '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{% endif %}",
      "eos_token": "<|eot_id|>",
      "stop": [
        "<|eom_id|>",
        "<|eot_id|>"
      ]
    },
    "context_length": 131072,
    "created": 1727236346,
    "display_name": "Meta Llama Vision Free",
    "id": "meta-llama/Llama-Vision-Free",
    "license": "llama",
    "link": "https://huggingface.co/meta-llama/Llama-3.2-11B-Vision-Instruct",
    "object": "model",
    "organization": "Meta",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0,
      "output": 0
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": "{% if messages.length % 2 == 0 %}{% set final_role = 'Agent' %}{% else %}{% set final_role = 'User' %}{% endif %}[INST] Task: Check if there is unsafe content in '{{ final_role }}' messages in conversations according our safety policy with the below categories.\n\n<BEGIN UNSAFE CONTENT CATEGORIES>\nS1: Violent Crimes.\nS2: Non-Violent Crimes.\nS3: Sex Crimes.\nS4: Child Exploitation.\nS5: Specialized Advice.\nS6: Privacy.\nS7: Intellectual Property.\nS8: Indiscriminate Weapons.\nS9: Hate.\nS10: Self-Harm.\nS11: Sexual Content.\n<END UNSAFE CONTENT CATEGORIES>\n\n<BEGIN CONVERSATION>\n\n{% for message in messages %}{% if message['role'] == 'user' and loop.index0 % 2 == 0 %}User: {{ message['content'].trim() }}{% elif message['role'] == 'assistant' and loop.index0 % 2 != 0 %}Agent: {{ message['content'].trim() }}{% else %}{{ raise_exception('Conversation roles must alternate user/assistant/user/assistant/...') }}{% endif %}{% if loop.last %}{% set role = message['role'] %}{% endif %}{{ '\n\n' }}{% endfor %}<END CONVERSATION>\n\nProvide your safety assessment for ONLY THE LAST {{ role }} message in the above conversation:\n - First line must read 'safe' or 'unsafe'.\n - If unsafe, a second line must include a comma-separated list of violated categories. [/INST]",
      "eos_token": null,
      "stop": []
    },
    "context_length": 8192,
    "created": 1713429380,
    "display_name": "Meta Llama Guard 2 8B",
    "id": "meta-llama/LlamaGuard-2-8b",
    "license": "Llama-3 (Other)",
    "link": null,
    "object": "model",
    "organization": "Meta",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.2,
      "output": 0.2
    },
    "running": false,
    "type": "moderation"
  },
  {
    "config": {
      "bos_token": "<|begin_of_text|>",
      "chat_template": "{% set loop_messages = messages %}{% for message in loop_messages %}{% set content = '<|start_header_id|>' + message['role'] + '<|end_header_id|>\n\n'+ message['content'] | trim + '<|eot_id|>' %}{% if loop.index0 == 0 %}{% set content = bos_token + content %}{% endif %}{{ content }}{% endfor %}{{ '<|start_header_id|>assistant<|end_header_id|>\n\n' }}",
      "eos_token": "<|end_of_text|>",
      "stop": [
        "<|eot_id|>"
      ]
    },
    "context_length": 8192,
    "created": 0,
    "display_name": "Meta Llama 3 70B Instruct Lite",
    "id": "meta-llama/Meta-Llama-3-70B-Instruct-Lite",
    "license": "Llama-3 (Other)",
    "link": "https://huggingface.co/meta-llama/Meta-Llama-3-70B-Instruct",
    "object": "model",
    "organization": "Meta",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.54,
      "output": 0.54
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<|begin_of_text|>",
      "chat_template": "{% set loop_messages = messages %}{% for message in loop_messages %}{% set content = '<|start_header_id|>' + message['role'] + '<|end_header_id|>\n\n'+ message['content'] | trim + '<|eot_id|>' %}{% if loop.index0 == 0 %}{% set content = bos_token + content %}{% endif %}{{ content }}{% endfor %}{{ '<|start_header_id|>assistant<|end_header_id|>\n\n' }}",
      "eos_token": "<|end_of_text|>",
      "stop": [
        "<|eot_id|>"
      ]
    },
    "context_length": 8192,
    "created": 0,
    "display_name": "Meta Llama 3 70B Instruct Turbo",
    "id": "meta-llama/Meta-Llama-3-70B-Instruct-Turbo",
    "license": "Llama-3 (Other)",
    "link": "https://huggingface.co/meta-llama/Meta-Llama-3-70B-Instruct",
    "object": "model",
    "organization": "Meta",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.88,
      "output": 0.88
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<|begin_of_text|>",
      "chat_template": "{% set loop_messages = messages %}{% for message in loop_messages %}{% set content = '<|start_header_id|>' + message['role'] + '<|end_header_id|>\n\n'+ message['content'] | trim + '<|eot_id|>' %}{% if loop.index0 == 0 %}{% set content = bos_token + content %}{% endif %}{{ content }}{% endfor %}{{ '<|start_header_id|>assistant<|end_header_id|>\n\n' }}",
      "eos_token": "<|end_of_text|>",
      "stop": [
        "<|eot_id|>"
      ]
    },
    "context_length": 8192,
    "created": 0,
    "display_name": "Meta Llama 3 8B Instruct Lite",
    "id": "meta-llama/Meta-Llama-3-8B-Instruct-Lite",
    "license": "Llama-3 (Other)",
    "link": "https://huggingface.co/meta-llama/Meta-Llama-3-8B-Instruct",
    "object": "model",
    "organization": "Meta",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.1,
      "output": 0.1
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<|begin_of_text|>",
      "chat_template": "{% set loop_messages = messages %}{% for message in loop_messages %}{% set content = '<|start_header_id|>' + message['role'] + '<|end_header_id|>\n\n'+ message['content'] | trim + '<|eot_id|>' %}{% if loop.index0 == 0 %}{% set content = bos_token + content %}{% endif %}{{ content }}{% endfor %}{{ '<|start_header_id|>assistant<|end_header_id|>\n\n' }}",
      "eos_token": "<|end_of_text|>",
      "stop": [
        "<|eot_id|>"
      ]
    },
    "context_length": 8192,
    "created": 0,
    "display_name": "Meta Llama 3 8B Instruct Turbo",
    "id": "meta-llama/Meta-Llama-3-8B-Instruct-Turbo",
    "license": "Llama-3 (Other)",
    "link": "https://huggingface.co/meta-llama/Meta-Llama-3-8B-Instruct",
    "object": "model",
    "organization": "Meta",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.18000000000000002,
      "output": 0.18000000000000002
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<|begin_of_text|>",
      "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- set date_string = \"26 Jul 2024\" %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- System message + builtin tools #}\n{{- \"<|start_header_id|>system<|end_header_id|>\n\n\" }}\n{%- if builtin_tools is defined or tools %}\n    {{- \"Environment: ipython\n\" }}\n{%- endif %}\n{%- if builtin_tools is defined %}\n    {{- \"Tools: \" + builtin_tools | reject('equalto', 'code_interpreter') | join(\", \") + \"\n\n\"}}\n{%- endif %}\n{{- \"Cutting Knowledge Date: December 2023\n\" }}\n{{- \"Today Date: \" + date_string + \"\n\n\" }}\n{%- if tools %}\n    {{- \"You have access to the following functions:\n\n\" }}{%- for t in tools %}\n        {{- \"Use the function '\" + t.function.name + \"' to '\" + t.function.description + \"'\n\" }}\n        {{- t.function | dump(4) }}\n        {{- \"\n\n\" }}\n    {%- endfor %}\n{% raw %}If a you choose to call a function ONLY reply in the following format:\n<{start_tag}={function_name}>{parameters}{end_tag}\nwhere\n\nstart_tag => `<function`\nparameters => a JSON dict with the function argument name as key and function argument value as value.\nend_tag => `</function>`\n\nHere is an example,\n<function=example_function_name>{\"example_name\": \"example_value\"}</function>\n\nReminder:\n- Function calls MUST follow the specified format\n- Required parameters MUST be specified\n- Only call one function at a time\n- Put the entire function call reply on one line\n- Always add your sources when using search results to answer the user query\n\n{% endraw %}{%- endif %}\n{{- system_message }}\n{{- \"<|eot_id|>\" }}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n        {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\n\n'+ message['content'] | trim + '<|eot_id|>' }}\n    {%- elif 'tool_calls' in message and message.tool_calls %}\n        {%- if not message.tool_calls|length == 1 %}\n            {{- raise_exception(\"This model only supports single tool-calls at once!\") }}\n        {%- endif %}\n        {%- set tool_call = message.tool_calls[0].function %}\n        {%- if builtin_tools is defined and tool_call.name in builtin_tools %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\n\n' -}}\n            {{- \"<|python_tag|>\" + tool_call.name + \".call(\" }}\n            {%- for arg_name, arg_val in tool_call.arguments | items %}\n                {{- arg_name + '=\"' + arg_val + '\"' }}\n                {%- if not loop.last %}\n                    {{- \", \" }}\n                {%- endif %}\n                {%- endfor %}\n            {{- \")\" }}\n        {%- else  %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\n\n' -}}\n            {{- '{\"name\": \"' + tool_call.name + '\", ' }}\n            {{- '\"parameters\": ' }}\n            {{- tool_call.arguments | dump }}\n            {{- \"}\" }}\n        {%- endif %}\n        {%- if builtin_tools is defined %}\n            {#- This means we're in ipython mode #}\n            {{- \"<|eom_id|>\" }}\n        {%- else %}\n            {{- \"<|eot_id|>\" }}\n        {%- endif %}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|start_header_id|>ipython<|end_header_id|>\n\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | dump }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\n\n' }}{%- endif %}",
      "eos_token": "<|eot_id|>",
      "stop": [
        "<|eom_id|>",
        "<|eot_id|>"
      ]
    },
    "context_length": 130815,
    "created": 1721698359,
    "display_name": "Meta Llama 3.1 405B Instruct Turbo",
    "id": "meta-llama/Meta-Llama-3.1-405B-Instruct-Turbo",
    "license": "llama",
    "link": "https://huggingface.co/meta-llama/Meta-Llama-3.1-405B-Instruct",
    "object": "model",
    "organization": "Meta",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 3.5,
      "output": 3.5
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<|begin_of_text|>",
      "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- set date_string = \"26 Jul 2024\" %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- System message + builtin tools #}\n{{- \"<|start_header_id|>system<|end_header_id|>\n\n\" }}\n{%- if builtin_tools is defined or tools %}\n    {{- \"Environment: ipython\n\" }}\n{%- endif %}\n{%- if builtin_tools is defined %}\n    {{- \"Tools: \" + builtin_tools | reject('equalto', 'code_interpreter') | join(\", \") + \"\n\n\"}}\n{%- endif %}\n{{- \"Cutting Knowledge Date: December 2023\n\" }}\n{{- \"Today Date: \" + date_string + \"\n\n\" }}\n{%- if tools %}\n    {{- \"You have access to the following functions:\n\n\" }}{%- for t in tools %}\n        {{- \"Use the function '\" + t.function.name + \"' to '\" + t.function.description + \"'\n\" }}\n        {{- t.function | dump(4) }}\n        {{- \"\n\n\" }}\n    {%- endfor %}\n{% raw %}If a you choose to call a function ONLY reply in the following format:\n<{start_tag}={function_name}>{parameters}{end_tag}\nwhere\n\nstart_tag => `<function`\nparameters => a JSON dict with the function argument name as key and function argument value as value.\nend_tag => `</function>`\n\nHere is an example,\n<function=example_function_name>{\"example_name\": \"example_value\"}</function>\n\nReminder:\n- Function calls MUST follow the specified format\n- Required parameters MUST be specified\n- Only call one function at a time\n- Put the entire function call reply on one line\n- Always add your sources when using search results to answer the user query\n\n{% endraw %}{%- endif %}\n{{- system_message }}\n{{- \"<|eot_id|>\" }}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n        {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\n\n'+ message['content'] | trim + '<|eot_id|>' }}\n    {%- elif 'tool_calls' in message %}\n        {%- if not message.tool_calls|length == 1 %}\n            {{- raise_exception(\"This model only supports single tool-calls at once!\") }}\n        {%- endif %}\n        {%- set tool_call = message.tool_calls[0].function %}\n        {%- if builtin_tools is defined and tool_call.name in builtin_tools %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\n\n' -}}\n            {{- \"<|python_tag|>\" + tool_call.name + \".call(\" }}\n            {%- for arg_name, arg_val in tool_call.arguments | items %}\n                {{- arg_name + '=\"' + arg_val + '\"' }}\n                {%- if not loop.last %}\n                    {{- \", \" }}\n                {%- endif %}\n                {%- endfor %}\n            {{- \")\" }}\n        {%- else  %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\n\n' -}}\n            {{- '{\"name\": \"' + tool_call.name + '\", ' }}\n            {{- '\"parameters\": ' }}\n            {{- tool_call.arguments | dump }}\n            {{- \"}\" }}\n        {%- endif %}\n        {%- if builtin_tools is defined %}\n            {#- This means we're in ipython mode #}\n            {{- \"<|eom_id|>\" }}\n        {%- else %}\n            {{- \"<|eot_id|>\" }}\n        {%- endif %}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|start_header_id|>ipython<|end_header_id|>\n\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | dump }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\n\n' }}{%- endif %}",
      "eos_token": "<|eot_id|>",
      "stop": [
        "<|eom_id|>",
        "<|eot_id|>"
      ]
    },
    "context_length": 131072,
    "created": 1721603683,
    "display_name": "Meta Llama 3.1 70B Instruct Turbo",
    "id": "meta-llama/Meta-Llama-3.1-70B-Instruct-Turbo",
    "license": "Llama-3.1 (Other)",
    "link": "https://huggingface.co/meta-llama/Meta-Llama-3.1-70B-Instruct",
    "object": "model",
    "organization": "Meta",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.88,
      "output": 0.88
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<|begin_of_text|>",
      "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- set date_string = \"26 Jul 2024\" %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- System message + builtin tools #}\n{{- \"<|start_header_id|>system<|end_header_id|>\n\n\" }}\n{%- if builtin_tools is defined or tools %}\n    {{- \"Environment: ipython\n\" }}\n{%- endif %}\n{%- if builtin_tools is defined %}\n    {{- \"Tools: \" + builtin_tools | reject('equalto', 'code_interpreter') | join(\", \") + \"\n\n\"}}\n{%- endif %}\n{{- \"Cutting Knowledge Date: December 2023\n\" }}\n{{- \"Today Date: \" + date_string + \"\n\n\" }}\n{%- if tools %}\n    {{- \"You have access to the following functions:\n\n\" }}{%- for t in tools %}\n        {{- \"Use the function '\" + t.function.name + \"' to '\" + t.function.description + \"'\n\" }}\n        {{- t.function | dump(4) }}\n        {{- \"\n\n\" }}\n    {%- endfor %}\n{% raw %}If a you choose to call a function ONLY reply in the following format:\n<{start_tag}={function_name}>{parameters}{end_tag}\nwhere\n\nstart_tag => `<function`\nparameters => a JSON dict with the function argument name as key and function argument value as value.\nend_tag => `</function>`\n\nHere is an example,\n<function=example_function_name>{\"example_name\": \"example_value\"}</function>\n\nReminder:\n- Function calls MUST follow the specified format\n- Required parameters MUST be specified\n- Only call one function at a time\n- Put the entire function call reply on one line\n- Always add your sources when using search results to answer the user query\n\n{% endraw %}{%- endif %}\n{{- system_message }}\n{{- \"<|eot_id|>\" }}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n        {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\n\n'+ message['content'] | trim + '<|eot_id|>' }}\n    {%- elif 'tool_calls' in message %}\n        {%- if not message.tool_calls|length == 1 %}\n            {{- raise_exception(\"This model only supports single tool-calls at once!\") }}\n        {%- endif %}\n        {%- set tool_call = message.tool_calls[0].function %}\n        {%- if builtin_tools is defined and tool_call.name in builtin_tools %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\n\n' -}}\n            {{- \"<|python_tag|>\" + tool_call.name + \".call(\" }}\n            {%- for arg_name, arg_val in tool_call.arguments | items %}\n                {{- arg_name + '=\"' + arg_val + '\"' }}\n                {%- if not loop.last %}\n                    {{- \", \" }}\n                {%- endif %}\n                {%- endfor %}\n            {{- \")\" }}\n        {%- else  %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\n\n' -}}\n            {{- '{\"name\": \"' + tool_call.name + '\", ' }}\n            {{- '\"parameters\": ' }}\n            {{- tool_call.arguments | dump }}\n            {{- \"}\" }}\n        {%- endif %}\n        {%- if builtin_tools is defined %}\n            {#- This means we're in ipython mode #}\n            {{- \"<|eom_id|>\" }}\n        {%- else %}\n            {{- \"<|eot_id|>\" }}\n        {%- endif %}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|start_header_id|>ipython<|end_header_id|>\n\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | dump }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\n\n' }}{%- endif %}",
      "eos_token": "<|eot_id|>",
      "stop": [
        "<|eom_id|>",
        "<|eot_id|>"
      ]
    },
    "context_length": 131072,
    "created": 1721603250,
    "display_name": "Meta Llama 3.1 8B Instruct Turbo",
    "id": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "license": "Llama-3.1 (Other)",
    "link": "https://huggingface.co/meta-llama/Meta-Llama-3.1-8B-Instruct",
    "object": "model",
    "organization": "Meta",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.18000000000000002,
      "output": 0.18000000000000002
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<|begin_of_text|>",
      "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- set date_string = \"26 Jul 2024\" %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- System message + builtin tools #}\n{{- \"<|start_header_id|>system<|end_header_id|>\n\n\" }}\n{%- if builtin_tools is defined or tools %}\n    {{- \"Environment: ipython\n\" }}\n{%- endif %}\n{%- if builtin_tools is defined %}\n    {{- \"Tools: \" + builtin_tools | reject('equalto', 'code_interpreter') | join(\", \") + \"\n\n\"}}\n{%- endif %}\n{{- \"Cutting Knowledge Date: December 2023\n\" }}\n{{- \"Today Date: \" + date_string + \"\n\n\" }}\n{%- if tools %}\n    {{- \"You have access to the following functions:\n\n\" }}{%- for t in tools %}\n        {{- \"Use the function '\" + t.function.name + \"' to '\" + t.function.description + \"'\n\" }}\n        {{- t.function | dump(4) }}\n        {{- \"\n\n\" }}\n    {%- endfor %}\n{% raw %}If a you choose to call a function ONLY reply in the following format:\n<{start_tag}={function_name}>{parameters}{end_tag}\nwhere\n\nstart_tag => `<function`\nparameters => a JSON dict with the function argument name as key and function argument value as value.\nend_tag => `</function>`\n\nHere is an example,\n<function=example_function_name>{\"example_name\": \"example_value\"}</function>\n\nReminder:\n- Function calls MUST follow the specified format\n- Required parameters MUST be specified\n- Only call one function at a time\n- Put the entire function call reply on one line\n- Always add your sources when using search results to answer the user query\n\n{% endraw %}{%- endif %}\n{{- system_message }}\n{{- \"<|eot_id|>\" }}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n        {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\n\n'+ message['content'] | trim + '<|eot_id|>' }}\n    {%- elif 'tool_calls' in message %}\n        {%- if not message.tool_calls|length == 1 %}\n            {{- raise_exception(\"This model only supports single tool-calls at once!\") }}\n        {%- endif %}\n        {%- set tool_call = message.tool_calls[0].function %}\n        {%- if builtin_tools is defined and tool_call.name in builtin_tools %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\n\n' -}}\n            {{- \"<|python_tag|>\" + tool_call.name + \".call(\" }}\n            {%- for arg_name, arg_val in tool_call.arguments | items %}\n                {{- arg_name + '=\"' + arg_val + '\"' }}\n                {%- if not loop.last %}\n                    {{- \", \" }}\n                {%- endif %}\n                {%- endfor %}\n            {{- \")\" }}\n        {%- else  %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\n\n' -}}\n            {{- '{\"name\": \"' + tool_call.name + '\", ' }}\n            {{- '\"parameters\": ' }}\n            {{- tool_call.arguments | dump }}\n            {{- \"}\" }}\n        {%- endif %}\n        {%- if builtin_tools is defined %}\n            {#- This means we're in ipython mode #}\n            {{- \"<|eom_id|>\" }}\n        {%- else %}\n            {{- \"<|eot_id|>\" }}\n        {%- endif %}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|start_header_id|>ipython<|end_header_id|>\n\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | dump }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\n\n' }}{%- endif %}",
      "eos_token": "<|eot_id|>",
      "stop": [
        "<|eom_id|>",
        "<|eot_id|>"
      ]
    },
    "context_length": 131072,
    "created": 1734117955,
    "display_name": "Meta Llama 3.1 8B Instruct Turbo",
    "id": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo-128K",
    "license": "Llama-3.1 (Other)",
    "link": "https://huggingface.co/meta-llama/Meta-Llama-3.1-8B-Instruct",
    "object": "model",
    "organization": "Meta",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.18000000000000002,
      "output": 0.18000000000000002
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<|begin_of_text|>",
      "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- set date_string = \"26 Jul 2024\" %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- System message + builtin tools #}\n{{- \"<|start_header_id|>system<|end_header_id|>\n\n\" }}\n{%- if builtin_tools is defined or tools %}\n    {{- \"Environment: ipython\n\" }}\n{%- endif %}\n{%- if builtin_tools is defined %}\n    {{- \"Tools: \" + builtin_tools | reject('equalto', 'code_interpreter') | join(\", \") + \"\n\n\"}}\n{%- endif %}\n{{- \"Cutting Knowledge Date: December 2023\n\" }}\n{{- \"Today Date: \" + date_string + \"\n\n\" }}\n{%- if tools %}\n    {{- \"You have access to the following functions:\n\n\" }}{%- for t in tools %}\n        {{- \"Use the function '\" + t.function.name + \"' to '\" + t.function.description + \"'\n\" }}\n        {{- t.function | dump(4) }}\n        {{- \"\n\n\" }}\n    {%- endfor %}\n{% raw %}If a you choose to call a function ONLY reply in the following format:\n<{start_tag}={function_name}>{parameters}{end_tag}\nwhere\n\nstart_tag => `<function`\nparameters => a JSON dict with the function argument name as key and function argument value as value.\nend_tag => `</function>`\n\nHere is an example,\n<function=example_function_name>{\"example_name\": \"example_value\"}</function>\n\nReminder:\n- Function calls MUST follow the specified format\n- Required parameters MUST be specified\n- Only call one function at a time\n- Put the entire function call reply on one line\n- Always add your sources when using search results to answer the user query\n\n{% endraw %}{%- endif %}\n{{- system_message }}\n{{- \"<|eot_id|>\" }}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n        {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\n\n'+ message['content'] | trim + '<|eot_id|>' }}\n    {%- elif 'tool_calls' in message %}\n        {%- if not message.tool_calls|length == 1 %}\n            {{- raise_exception(\"This model only supports single tool-calls at once!\") }}\n        {%- endif %}\n        {%- set tool_call = message.tool_calls[0].function %}\n        {%- if builtin_tools is defined and tool_call.name in builtin_tools %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\n\n' -}}\n            {{- \"<|python_tag|>\" + tool_call.name + \".call(\" }}\n            {%- for arg_name, arg_val in tool_call.arguments | items %}\n                {{- arg_name + '=\"' + arg_val + '\"' }}\n                {%- if not loop.last %}\n                    {{- \", \" }}\n                {%- endif %}\n                {%- endfor %}\n            {{- \")\" }}\n        {%- else  %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\n\n' -}}\n            {{- '{\"name\": \"' + tool_call.name + '\", ' }}\n            {{- '\"parameters\": ' }}\n            {{- tool_call.arguments | dump }}\n            {{- \"}\" }}\n        {%- endif %}\n        {%- if builtin_tools is defined %}\n            {#- This means we're in ipython mode #}\n            {{- \"<|eom_id|>\" }}\n        {%- else %}\n            {{- \"<|eot_id|>\" }}\n        {%- endif %}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|start_header_id|>ipython<|end_header_id|>\n\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | dump }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\n\n' }}{%- endif %}",
      "eos_token": "<|eot_id|>",
      "stop": [
        "<|eom_id|>",
        "<|eot_id|>"
      ]
    },
    "context_length": 131072,
    "created": 1740432204,
    "display_name": "Meta Llama 3.1 8B Instruct Turbo",
    "id": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo-classifier",
    "license": "Llama-3.1 (Other)",
    "link": "https://huggingface.co/meta-llama/Meta-Llama-3.1-8B-Instruct",
    "object": "model",
    "organization": "Meta",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.18000000000000002,
      "output": 0.18000000000000002
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": "{% if messages.length % 2 == 0 %}{% set final_role = 'Agent' %}{% else %}{% set final_role = 'User' %}{% endif %}<|begin_of_text|><|start_header_id|>user<|end_header_id|>\n\nTask: Check if there is unsafe content in '{{ final_role }}' messages in conversations according our safety policy with the below categories.\n\n<BEGIN UNSAFE CONTENT CATEGORIES>\nS1: Violent Crimes.\nS2: Non-Violent Crimes.\nS3: Sex Crimes.\nS4: Child Exploitation.\nS5: Defamation.\nS6: Specialized Advice.\nS7: Privacy.\nS8: Intellectual Property.\nS9: Indiscriminate Weapons.\nS10: Hate.\nS11: Self-Harm.\nS12: Sexual Content.\nS13: Elections.\nS14: Code Interpreter Abuse.\n<END UNSAFE CONTENT CATEGORIES>\n\n<BEGIN CONVERSATION>\n\n{% for message in messages %}{% if message['role'] == 'user' and loop.index0 % 2 == 0 %}User: {{ message['content'].trim() }}{% elif message['role'] == 'assistant' and loop.index0 % 2 != 0 %}Agent: {{ message['content'].trim() }}{% endif %}{% if loop.last %}{% set role = message['role'] %}{% endif %}{{ '\n\n' }}{% endfor %}<END CONVERSATION>\n\nProvide your safety assessment for {{ role }} in the above conversation:\n - First line must read 'safe' or 'unsafe'.\n - If unsafe, a second line must include a comma-separated list of violated categories.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n",
      "eos_token": null,
      "stop": []
    },
    "context_length": 8192,
    "created": 1713429380,
    "display_name": "Meta Llama Guard 3 8B",
    "id": "meta-llama/Meta-Llama-Guard-3-8B",
    "license": "llama",
    "link": null,
    "object": "model",
    "organization": "Meta",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.2,
      "output": 0.2
    },
    "running": false,
    "type": "moderation"
  },
  {
    "config": {
      "bos_token": "<s>",
      "chat_template": "{% for message in messages %}{{message['role'].toLocaleUpperCase() + ': ' + message['content'] + '\n'}}{% endfor %}{{ 'ASSISTANT: ' }}",
      "eos_token": "</s>",
      "stop": [
        "</s>"
      ]
    },
    "context_length": 65536,
    "created": 1713206398,
    "display_name": "WizardLM-2 (8x22B)",
    "id": "microsoft/WizardLM-2-8x22B",
    "license": "apache-2.0",
    "link": "https://huggingface.co/microsoft/WizardLM-2-8x22B",
    "object": "model",
    "organization": "microsoft",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 1.2,
      "output": 1.2
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<s>",
      "chat_template": "{% if messages[0]['role'] == 'system' %}{% set loop_messages = messages[1:] %}{% set system_message = messages[0]['content'] %}{% else %}{% set loop_messages = messages %}{% set system_message = false %}{% endif %}{% for message in loop_messages %}{% if loop.index0 == 0 and system_message != false %}{% set content = '<<SYS>>\\n' + system_message + '\\n<</SYS>>\\n\\n' + message['content'] %}{% else %}{% set content = message['content'] %}{% endif %}{% if message['role'] == 'user' or message['role'] == 'tool' %}{{ bos_token + '[INST] ' + content + ' [/INST]' }}{% elif message['role'] == 'system' %}{{ '<<SYS>>\\n' + content + '\\n<</SYS>>\\n\\n' }}{% elif message['role'] == 'assistant' %}{{ ' '  + content + ' ' + eos_token }}{% endif %}{% endfor %}",
      "eos_token": "</s>",
      "stop": [
        "</s>"
      ]
    },
    "context_length": 32768,
    "created": 1695860851,
    "display_name": "Mistral (7B) Instruct",
    "id": "mistralai/Mistral-7B-Instruct-v0.1",
    "license": "apache-2.0",
    "link": "https://huggingface.co/api/models/mistralai/Mistral-7B-Instruct-v0.1",
    "object": "model",
    "organization": "mistralai",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.2,
      "output": 0.2
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<s>",
      "chat_template": "{% if messages[0]['role'] == 'system' %}{% set loop_messages = messages[1:] %}{% set system_message = messages[0]['content'] %}{% else %}{% set loop_messages = messages %}{% set system_message = false %}{% endif %}{% for message in loop_messages %}{% if loop.index0 == 0 and system_message != false %}{% set content = '<<SYS>>\\n' + system_message + '\\n<</SYS>>\\n\\n' + message['content'] %}{% else %}{% set content = message['content'] %}{% endif %}{% if message['role'] == 'user' or message['role'] == 'tool' %}{{ bos_token + '[INST] ' + content + ' [/INST]' }}{% elif message['role'] == 'system' %}{{ '<<SYS>>\\n' + content + '\\n<</SYS>>\\n\\n' }}{% elif message['role'] == 'assistant' %}{{ ' '  + content + ' ' + eos_token }}{% endif %}{% endfor %}",
      "eos_token": "</s>",
      "stop": [
        "</s>",
        "[/INST]"
      ]
    },
    "context_length": 32768,
    "created": 1702325373,
    "display_name": "Mistral (7B) Instruct v0.2",
    "id": "mistralai/Mistral-7B-Instruct-v0.2",
    "license": "apache-2.0",
    "object": "model",
    "organization": "mistralai",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.2,
      "output": 0.2
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<s>",
      "chat_template": "{% if messages[0]['role'] == 'system' %}{% set loop_messages = messages[1:] %}{% set system_message = messages[0]['content'] %}{% else %}{% set loop_messages = messages %}{% set system_message = false %}{% endif %}{% for message in loop_messages %}{% if loop.index0 == 0 and system_message != false %}{% set content = '<<SYS>>\\n' + system_message + '\\n<</SYS>>\\n\\n' + message['content'] %}{% else %}{% set content = message['content'] %}{% endif %}{% if message['role'] == 'user' or message['role'] == 'tool' %}{{ bos_token + '[INST] ' + content + ' [/INST]' }}{% elif message['role'] == 'system' %}{{ '<<SYS>>\\n' + content + '\\n<</SYS>>\\n\\n' }}{% elif message['role'] == 'assistant' %}{{ ' '  + content + ' ' + eos_token }}{% endif %}{% endfor %}",
      "eos_token": "</s>",
      "stop": [
        "</s>"
      ]
    },
    "context_length": 32768,
    "created": 1716406261,
    "display_name": "Mistral (7B) Instruct v0.3",
    "id": "mistralai/Mistral-7B-Instruct-v0.3",
    "license": "apache-2.0",
    "link": "https://huggingface.co/api/models/mistralai/Mistral-7B-Instruct-v0.3",
    "object": "model",
    "organization": "mistralai",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.2,
      "output": 0.2
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<s>",
      "chat_template": "{% if messages[0]['role'] == 'system' %}{% set loop_messages = messages[1:] %}{% set system_message = messages[0]['content'] %}{% else %}{% set loop_messages = messages %}{% set system_message = false %}{% endif %}{% for message in loop_messages %}{% if loop.index0 == 0 and system_message != false %}{% set content = '<<SYS>>\\n' + system_message + '\\n<</SYS>>\\n\\n' + message['content'] %}{% else %}{% set content = message['content'] %}{% endif %}{% if message['role'] == 'user' or message['role'] == 'tool' %}{{ bos_token + '[INST] ' + content + ' [/INST]' }}{% elif message['role'] == 'system' %}{{ '<<SYS>>\\n' + content + '\\n<</SYS>>\\n\\n' }}{% elif message['role'] == 'assistant' %}{{ ' '  + content + ' ' + eos_token }}{% endif %}{% endfor %}",
      "eos_token": "</s>",
      "stop": [
        "</s>"
      ]
    },
    "context_length": 4096,
    "created": 1695860462,
    "display_name": "Mistral (7B)",
    "id": "mistralai/Mistral-7B-v0.1",
    "license": "Apache-2",
    "object": "model",
    "organization": "mistralai",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.2,
      "output": 0.2
    },
    "running": false,
    "type": "language"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": "{{ bos_token }}{% for message in messages %}{% if message['role'] == 'system' %}[SYSTEM_PROMPT]{{ message['content'] }}[/SYSTEM_PROMPT]{% elif message['role'] == 'user' %}[INST]{{ message['content'] }}[/INST]{% elif message['role'] == 'assistant' %}{{ message['content'] + '</s>' }}{% endif %}{% endfor %}",
      "eos_token": null,
      "stop": [
        "</s>",
        "[/INST]"
      ]
    },
    "context_length": 32768,
    "created": 1738246136,
    "display_name": "Mistral Small (24B) Instruct 25.01",
    "id": "mistralai/Mistral-Small-24B-Instruct-2501",
    "license": "apache-2.0",
    "link": "https://huggingface.co/mistralai/Mistral-Small-Instruct-2501",
    "object": "model",
    "organization": "mistralai",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.8,
      "output": 0.8
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<s>",
      "chat_template": "{{bos_token}}{% if messages[0]['role'] == 'system' %}{% set loop_messages = messages[1:] %}{% set system_message = messages[0]['content'] %}{% else %}{% set loop_messages = messages %}{% set system_message = false %}{% endif %}{% for message in loop_messages %}{% if loop.index0 == 0 and system_message != false %}{% set content = '<<SYS>>\n' + system_message + '\n<</SYS>>\n\n' + message['content'] %}{% else %}{% set content = message['content'] %}{% endif %}{% if message['role'] == 'user' %}{{ ' [INST] ' + content + ' [/INST]' }}{% elif message['role'] == 'system' %}{{ '<<SYS>>\n' + content + '\n<</SYS>>\n\n' }}{% elif message['role'] == 'assistant' %}{{ ' '  + content + ' ' + eos_token }}{% endif %}{% endfor %}",
      "eos_token": "</s>",
      "stop": [
        "</s>",
        "[/INST]"
      ]
    },
    "context_length": 65536,
    "created": 1713374615,
    "display_name": "Mixtral-8x22B Instruct v0.1",
    "id": "mistralai/Mixtral-8x22B-Instruct-v0.1",
    "license": "apache-2.0",
    "link": "https://huggingface.co/mistralai/Mixtral-8x22B-Instruct-v0.1",
    "object": "model",
    "organization": "mistralai",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 1.2,
      "output": 1.2
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<s>",
      "chat_template": "{% if messages[0]['role'] == 'system' %}{% set loop_messages = messages[1:] %}{% set system_message = messages[0]['content'] %}{% else %}{% set loop_messages = messages %}{% set system_message = false %}{% endif %}{% for message in loop_messages %}{% if loop.index0 == 0 and system_message != false %}{% set content = '<<SYS>>\\n' + system_message + '\\n<</SYS>>\\n\\n' + message['content'] %}{% else %}{% set content = message['content'] %}{% endif %}{% if message['role'] == 'user' or message['role'] == 'tool' %}{{ bos_token + '[INST] ' + content + ' [/INST]' }}{% elif message['role'] == 'system' %}{{ '<<SYS>>\\n' + content + '\\n<</SYS>>\\n\\n' }}{% elif message['role'] == 'assistant' %}{{ ' '  + content + ' ' + eos_token }}{% endif %}{% endfor %}",
      "eos_token": "</s>",
      "stop": [
        "</s>",
        "[/INST]"
      ]
    },
    "context_length": 32768,
    "created": 1702342468,
    "display_name": "Mixtral-8x7B Instruct v0.1",
    "id": "mistralai/Mixtral-8x7B-Instruct-v0.1",
    "license": "apache-2.0",
    "link": "https://huggingface.co/mistralai/Mixtral-8x7B-Instruct-v0.1",
    "object": "model",
    "organization": "mistralai",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.6,
      "output": 0.6
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": null,
      "eos_token": null,
      "stop": []
    },
    "context_length": 32768,
    "created": 1702346512,
    "display_name": "Mixtral-8x7B v0.1",
    "id": "mistralai/Mixtral-8x7B-v0.1",
    "license": "apache-2.0",
    "link": "https://huggingface.co/mistralai/Mixtral-8x7B-v0.1",
    "object": "model",
    "organization": "mistralai",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.6,
      "output": 0.6
    },
    "running": false,
    "type": "language"
  },
  {
    "config": {
      "bos_token": "<|begin_of_text|>",
      "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- set date_string = \"26 Jul 2024\" %}\n{%- endif %}\n{%- if not tools is defined %}\n    {%- set tools = none %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- System message + builtin tools #}\n{{- \"<|start_header_id|>system<|end_header_id|>\\n\\n\" }}\n{%- if builtin_tools is defined or tools is not none %}\n    {{- \"Environment: ipython\\n\" }}\n{%- endif %}\n{%- if builtin_tools is defined %}\n    {{- \"Tools: \" + builtin_tools | reject('equalto', 'code_interpreter') | join(\", \") + \"\\n\\n\"}}\n{%- endif %}\n\n{%- if tools is not none and not tools_in_user_message %}\n    {{- \"You have access to the following functions. To call a function, please respond with JSON for a function call.\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n{%- endif %}\n{{- system_message }}\n{{- \"<|eot_id|>\" }}\n\n{#- Custom tools are passed in a user message with some extra guidance #}\n{%- if tools_in_user_message and not tools is none %}\n    {#- Extract the first user message so we can plug it in here #}\n    {%- if messages | length != 0 %}\n        {%- set first_user_message = messages[0]['content']|trim %}\n        {%- set messages = messages[1:] %}\n    {%- else %}\n        {{- raise_exception(\"Cannot put tools in the first user message when there's no first user message!\") }}\n{%- endif %}\n    {{- '<|start_header_id|>user<|end_header_id|>\\n\\n' -}}\n    {{- \"Given the following functions, please respond with a JSON for a function call \" }}\n    {{- \"with its proper arguments that best answers the given prompt.\\n\\n\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n    {{- first_user_message + \"<|eot_id|>\"}}\n{%- endif %}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n        {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n'+ message['content'] | trim + '<|eot_id|>' }}\n    {%- elif 'tool_calls' in message %}\n        {%- if not message.tool_calls|length == 1 %}\n            {{- raise_exception(\"This model only supports single tool-calls at once!\") }}\n        {%- endif %}\n        {%- set tool_call = message.tool_calls[0].function %}\n        {%- if builtin_tools is defined and tool_call.name in builtin_tools %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n            {{- \"<|python_tag|>\" + tool_call.name + \".call(\" }}\n            {%- for arg_name, arg_val in tool_call.arguments | items %}\n                {{- arg_name + '=\"' + arg_val + '\"' }}\n                {%- if not loop.last %}\n                    {{- \", \" }}\n                {%- endif %}\n                {%- endfor %}\n            {{- \")\" }}\n        {%- else  %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n            {{- '{\"name\": \"' + tool_call.name + '\", ' }}\n            {{- '\"parameters\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- \"}\" }}\n        {%- endif %}\n        {%- if builtin_tools is defined %}\n            {#- This means we're in ipython mode #}\n            {{- \"<|eom_id|>\" }}\n        {%- else %}\n            {{- \"<|eot_id|>\" }}\n        {%- endif %}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|start_header_id|>ipython<|end_header_id|>\\n\\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | tojson }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{%- endif %}\n",
      "eos_token": "<|eot_id|>",
      "stop": [
        "<|eom_id|>",
        "<|eot_id|>"
      ]
    },
    "context_length": 32768,
    "created": 1731110984,
    "display_name": "Llama 3.1 Nemotron 70B Instruct HF",
    "id": "nvidia/Llama-3.1-Nemotron-70B-Instruct-HF",
    "license": "llama3.1",
    "link": "https://huggingface.co/nvidia/Llama-3.1-Nemotron-70B-Instruct-HF",
    "object": "model",
    "organization": "nvidia",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.88,
      "output": 0.88
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<|begin_of_text|>",
      "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- set date_string = \"26 Jul 2024\" %}\n{%- endif %}\n{%- if not tools is defined %}\n    {%- set tools = none %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- System message + builtin tools #}\n{{- \"<|start_header_id|>system<|end_header_id|>\\n\\n\" }}\n{{- \"Cutting Knowledge Date: December 2023\\n\" }}\n{{- \"Today Date: \" + date_string + \"\\n\\n\" }}\n{{- system_message }}\n{%- if tools is not none %}\n    {{- \"\\n\" }}\n    {{- \"You are given a question and a set of possible functions. Based on the question, you will need to make one or more function/tool calls to achieve the purpose.\" }}\n    {{- \"If none of the function can be used, point it out. If the given question lacks the parameters required by the function, also point it out.\" }}\n    {{- \"You should only return the function call in tools call sections.\" }}\n    {{- \"If you decide to invoke any of the function(s), you MUST put it in the format of [Function(arguments1={{params_name1: params_value1,params_name2: params_value2, ...}},  name1=function_name1), Function(arguments2={{params}},  name2=function_name2) , ...]\"}}\n    {{- \"You SHOULD NOT include any other text in the response.\\nHere is a list of functions in JSON format that you can invoke.\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n{%- endif %}\n{{- \"<|eot_id|>\" }}\n\n\n{%- for message in messages %}\n    {%- if not (message.role == 'tool') %}\n        {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n'+ message['content'] | trim + '<|eot_id|>' }}\n    {%- elif message.role == \"tool\" %}\n        {{- \"<|start_header_id|>tool<|end_header_id|>\\n\\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | tojson }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{%- endif %}",
      "eos_token": "<|eot_id|>",
      "stop": [
        "<|eot_id|>"
      ]
    },
    "context_length": 8192,
    "created": 1740427773,
    "display_name": "Typhoon 2 70B Instruct",
    "id": "scb10x/scb10x-llama3-1-typhoon2-60256",
    "license": "llama3.1",
    "link": "https://huggingface.co/api/models/scb10x/llama3.1-typhoon2-70b-instruct",
    "object": "model",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.88,
      "output": 0.88
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<|startoftext|>",
      "chat_template": "{% set loop_messages = messages %}{% for message in loop_messages %}{% set content = '<|start_header_id|>' + message['role'] + '<|end_header_id|>\n\n'+ message['content'] | trim + '<|eot_id|>' %}{% if loop.index0 == 0 %}{% set content = bos_token + content %}{% endif %}{{ content }}{% endfor %}{% if add_generation_prompt %}{{ '<|start_header_id|>assistant<|end_header_id|>\n\n' }}{% endif %}",
      "eos_token": "<|end_of_text|>",
      "stop": [
        "<|eot_id|>"
      ]
    },
    "context_length": 8192,
    "created": 1731461419,
    "display_name": "Typhoon 1.5 8B Instruct",
    "id": "scb10x/scb10x-llama3-typhoon-v1-5-8b-instruct",
    "license": "llama3",
    "link": "https://huggingface.co/scb10x/llama-3-typhoon-v1.5-8b-instruct",
    "object": "model",
    "organization": "SCB10X",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.18000000000000002,
      "output": 0.18000000000000002
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": "<|startoftext|>",
      "chat_template": "{% set loop_messages = messages %}{% for message in loop_messages %}{% set content = '<|start_header_id|>' + message['role'] + '<|end_header_id|>\n\n'+ message['content'] | trim + '<|eot_id|>' %}{% if loop.index0 == 0 %}{% set content = bos_token + content %}{% endif %}{{ content }}{% endfor %}{% if add_generation_prompt %}{{ '<|start_header_id|>assistant<|end_header_id|>\n\n' }}{% endif %}",
      "eos_token": "<|end_of_text|>",
      "stop": [
        "<|eot_id|>"
      ]
    },
    "context_length": 8192,
    "created": 1729637626,
    "display_name": "Typhoon 1.5X 70B-awq",
    "id": "scb10x/scb10x-llama3-typhoon-v1-5x-4f316",
    "license": "llama3",
    "link": "https://huggingface.co/scb10x/llama-3-typhoon-v1.5x-70b-instruct-awq",
    "object": "model",
    "organization": "SCB10X",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.88,
      "output": 0.88
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": null,
      "eos_token": null,
      "stop": []
    },
    "created": 1690929420,
    "display_name": "Stable Diffusion XL 1.0",
    "id": "stabilityai/stable-diffusion-xl-base-1.0",
    "license": "openrail++",
    "link": "https://huggingface.co/stabilityai/stable-diffusion-xl-base-1.0",
    "object": "model",
    "organization": "Stability AI",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0,
      "output": 0
    },
    "running": false,
    "type": "image"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": null,
      "eos_token": null,
      "stop": []
    },
    "context_length": 32768,
    "created": 1733856970,
    "display_name": "Together AI MoA-1",
    "id": "togethercomputer/MoA-1",
    "link": "https://github.com/togethercomputer/MoA",
    "object": "model",
    "organization": "Together AI",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0,
      "output": 0
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": null,
      "eos_token": null,
      "stop": []
    },
    "context_length": 32768,
    "created": 0,
    "display_name": "Together AI MoA-1-Turbo",
    "id": "togethercomputer/MoA-1-Turbo",
    "license": null,
    "link": "https://github.com/togethercomputer/MoA",
    "object": "model",
    "organization": "Together AI",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0,
      "output": 0
    },
    "running": false,
    "type": "chat"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": null,
      "eos_token": null,
      "stop": []
    },
    "created": 1699985626,
    "display_name": "M2-BERT-Retrieval-2K",
    "id": "togethercomputer/m2-bert-80M-2k-retrieval",
    "license": "Apache-2",
    "object": "model",
    "organization": "Together",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.008,
      "output": 0.008
    },
    "running": false,
    "type": "embedding"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": null,
      "eos_token": null,
      "stop": []
    },
    "context_length": 32768,
    "created": 1699120644,
    "display_name": "M2-BERT-Retrieval-32k",
    "id": "togethercomputer/m2-bert-80M-32k-retrieval",
    "license": "apache-2.0",
    "link": "https://huggingface.co/togethercomputer/m2-bert-80M-32k-retrieval",
    "object": "model",
    "organization": "Together",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.008,
      "output": 0.008
    },
    "running": false,
    "type": "embedding"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": null,
      "eos_token": null,
      "stop": []
    },
    "context_length": 8192,
    "created": 1699120644,
    "display_name": "M2-BERT-Retrieval-8k",
    "id": "togethercomputer/m2-bert-80M-8k-retrieval",
    "license": "apache-2.0",
    "link": "https://huggingface.co/togethercomputer/m2-bert-80M-8k-retrieval",
    "object": "model",
    "organization": "Together",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.008,
      "output": 0.008
    },
    "running": false,
    "type": "embedding"
  },
  {
    "config": {
      "bos_token": null,
      "chat_template": "{% for message in messages %}{% if message['role'] == 'system' %}{% if message['content']%}{{'### System:\n' + message['content']+'\n\n'}}{% endif %}{% elif message['role'] == 'user' %}{{'### User:\n' + message['content']+'\n\n'}}{% elif message['role'] == 'assistant' %}{{'### Assistant:\n'  + message['content']}}{% endif %}{% if loop.last and add_generation_prompt %}{{ '### Assistant:\n' }}{% endif %}{% endfor %}",
      "eos_token": null,
      "stop": [
        "###",
        "</s>"
      ]
    },
    "context_length": 4096,
    "created": 1702851922,
    "display_name": "Upstage SOLAR Instruct v1 (11B)",
    "id": "upstage/SOLAR-10.7B-Instruct-v1.0",
    "license": "cc-by-nc-4.0",
    "object": "model",
    "organization": "upstage",
    "pricing": {
      "base": 0,
      "finetune": 0,
      "hourly": 0,
      "input": 0.3,
      "output": 0.3
    },
    "running": false,
    "type": "chat"
  }
]
